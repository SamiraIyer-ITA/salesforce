<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>ApexGetRecordName</name>
        <label>ApexGetRecordName</label>
        <locationX>318</locationX>
        <locationY>374</locationY>
        <actionName>Flow_ObjectNamesFromIds</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Identify_Order_SObject_records</targetReference>
        </connector>
        <inputParameters>
            <name>ids</name>
            <value>
                <elementReference>RecordIds</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>VarObjectNames</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>ApexRestEmailService</name>
        <label>ApexRestEmailService</label>
        <locationX>1761</locationX>
        <locationY>297</locationY>
        <actionName>Flow_SendEmail</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>as_the_email_sent</targetReference>
        </connector>
        <inputParameters>
            <name>emailList</name>
            <value>
                <elementReference>FormulaEmailList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>userId</name>
            <value>
                <elementReference>FormulaUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordID</name>
            <value>
                <elementReference>VarRecordID</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>VarEmailErrorMessage</assignToReference>
            <name>VarEmailErrorMessage</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>VarEmailReceiptSent</assignToReference>
            <name>VarEmailReceiptSent</name>
        </outputParameters>
    </actionCalls>
    <assignments>
        <name>addFirstEmail</name>
        <label>addFirstEmail</label>
        <locationX>1058</locationX>
        <locationY>481</locationY>
        <assignmentItems>
            <assignToReference>VarEmailList</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarContactEmail</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VaraddMoreEmails</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarSpaceComma</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarTick</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>&apos;</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decisionAddmoreEmails</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_RecordID</name>
        <label>Assign RecordID</label>
        <locationX>318</locationX>
        <locationY>213</locationY>
        <assignmentItems>
            <assignToReference>VarRecordID</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>txtNoEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No email addresses are currently assigned. Please click Next to add an email address.</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>txtEmailAddressesExist</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The following email addresses will receive the receipt: </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarNumEmails</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecordIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ApexGetRecordName</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>updateEmailList</name>
        <label>updateEmailList</label>
        <locationX>1643</locationX>
        <locationY>814</locationY>
        <assignmentItems>
            <assignToReference>VarEmailList</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!VarEmailList},  {!addThisEmail.value}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>doTheyWantAnotherEmail</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>as_the_email_sent</name>
        <label>as the email sent?</label>
        <locationX>1486</locationX>
        <locationY>299</locationY>
        <defaultConnector>
            <targetReference>Email_Error_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>emailUnsuccessful</defaultConnectorLabel>
        <rules>
            <name>emailSuccessful</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarEmailReceiptSent</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_Success_Screen</targetReference>
            </connector>
            <label>emailSuccessful</label>
        </rules>
    </decisions>
    <decisions>
        <name>decisionAddmoreEmails</name>
        <label>decisionAddmoreEmails</label>
        <locationX>1422</locationX>
        <locationY>482</locationY>
        <defaultConnector>
            <targetReference>you_are_done</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>decisionNoMoreEmails</defaultConnectorLabel>
        <rules>
            <name>decisionAddMoreEmailsYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VaraddMoreEmails</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>addAnEmail</targetReference>
            </connector>
            <label>decisionAddMoreEmailsYes</label>
        </rules>
    </decisions>
    <decisions>
        <name>doTheyWantAnotherEmail</name>
        <label>doTheyWantAnotherEmail</label>
        <locationX>1753</locationX>
        <locationY>965</locationY>
        <defaultConnector>
            <targetReference>you_are_done</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>noMoreEmails</defaultConnectorLabel>
        <rules>
            <name>decisionTheyWantAnotherEmail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Add_another_email_address</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>addAnEmail</targetReference>
            </connector>
            <label>decisionTheyWantAnotherEmail</label>
        </rules>
    </decisions>
    <decisions>
        <description>tells us the SObject that the flow is invoked from</description>
        <name>Identify_Order_SObject_records</name>
        <label>Identify Order SObject records</label>
        <locationX>310</locationX>
        <locationY>571</locationY>
        <defaultConnector>
            <targetReference>Get_Order_Data</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Its an Order</defaultConnectorLabel>
        <rules>
            <name>itsAPayment2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarObjectNames</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payment2__c</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Payment2_Data</targetReference>
            </connector>
            <label>itsAPayment</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determine whether the recordId is for a Payment or Refund record.</description>
        <name>Is_Payment_or_Refund</name>
        <label>Is Payment or Refund</label>
        <locationX>582</locationX>
        <locationY>1002</locationY>
        <defaultConnector>
            <targetReference>getFirstEmail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Payment</defaultConnectorLabel>
        <rules>
            <name>Is_Refund</name>
            <conditionLogic>1 OR 2</conditionLogic>
            <conditions>
                <leftValueReference>VarPaymentType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Credit Card Refund</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>VarPaymentType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NIST-Handled Refund</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contract_Id</targetReference>
            </connector>
            <label>Is Refund</label>
        </rules>
    </decisions>
    <decisions>
        <name>isEmailBlank2</name>
        <label>isEmailBlank2</label>
        <locationX>1560</locationX>
        <locationY>621</locationY>
        <defaultConnector>
            <targetReference>updateEmailList</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>emailIsntBlank2</defaultConnectorLabel>
        <rules>
            <name>emailIsBlank2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>addEmailValueLength</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>you_are_done</targetReference>
            </connector>
            <label>emailIsBlank2</label>
        </rules>
    </decisions>
    <decisions>
        <name>isPrimaryContactBlank</name>
        <label>isPrimaryContactBlank</label>
        <locationX>1052</locationX>
        <locationY>762</locationY>
        <defaultConnector>
            <targetReference>addFirstEmail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>emailIsThere</defaultConnectorLabel>
        <rules>
            <name>emailIsBlank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ContactEmailLength</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenNoEmail</targetReference>
            </connector>
            <label>emailIsBlank</label>
        </rules>
    </decisions>
    <decisions>
        <name>OrderCanAReceiptBeIssued</name>
        <label>OrderCanAReceiptBeIssued</label>
        <locationX>831</locationX>
        <locationY>392</locationY>
        <defaultConnector>
            <targetReference>ScreenOrderNoReceipt</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>OrderDontIssueReceipt</defaultConnectorLabel>
        <rules>
            <name>OrderIssueReceipt</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarOrderPaidOnOrder</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>VarPaymentExistsOnOrder</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>BooleanOrderPaymentIsGood</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getFirstEmail</targetReference>
            </connector>
            <label>OrderIssueReceipt</label>
        </rules>
    </decisions>
    <decisions>
        <name>ReceiptCanAReceiptBeIssued</name>
        <label>ReceiptCanAReceiptBeIssued</label>
        <locationX>312</locationX>
        <locationY>997</locationY>
        <defaultConnector>
            <targetReference>Is_Payment_or_Refund</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>PaymentReceiptISOK</defaultConnectorLabel>
        <rules>
            <name>PaymentReceiptNotPossible</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BooleanPaymentIsGood</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenNoReceipt</targetReference>
            </connector>
            <label>PaymentReceiptNotPossible</label>
        </rules>
    </decisions>
    <description>Sends an email receipt from the Payment2 detail page</description>
    <formulas>
        <name>addEmailValueLength</name>
        <dataType>Number</dataType>
        <expression>Len({!addThisEmail.value})</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>BooleanOrderPaymentIsGood</name>
        <dataType>Boolean</dataType>
        <expression>IF(CONTAINS({!VarOrderPaymentTransactionStatus},&quot;Success&quot;) , TRUE,
IF(CONTAINS({!VarOrderPaymentTransactionStatus},&quot;Received&quot;), TRUE,FALSE))</expression>
    </formulas>
    <formulas>
        <name>BooleanPaymentIsGood</name>
        <dataType>Boolean</dataType>
        <expression>IF(CONTAINS({!VarPaymentTransactionStatus},&quot;Success&quot;) , TRUE,
IF(CONTAINS({!VarPaymentTransactionStatus},&quot;Received&quot;), TRUE,FALSE))</expression>
    </formulas>
    <formulas>
        <name>ContactEmailLength</name>
        <dataType>Number</dataType>
        <expression>LEN({!VarContactEmail})</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>contactIsBlank</name>
        <dataType>Boolean</dataType>
        <expression>ISNULL({!VarContactEmail})</expression>
    </formulas>
    <formulas>
        <name>FormulaEmailList</name>
        <dataType>String</dataType>
        <expression>IF(
Left({!VarEmailList}, 1) == &apos;,&apos;,
MID({!VarEmailList}, 2, LEN({!VarEmailList})),
{!VarEmailList}
)</expression>
    </formulas>
    <formulas>
        <name>FormulaPassToMethod</name>
        <dataType>String</dataType>
        <expression>{!VarTick} + {!FormulaEmailList} + {!VarTick} + {!VarSpaceComma} + {!VarTick} + {!VarRecordID} + {!VarTick} + {!VarSpaceComma} + {!VarTick} + {!FormulaUserId} + {!VarTick}</expression>
    </formulas>
    <formulas>
        <name>FormulaUserId</name>
        <dataType>String</dataType>
        <expression>{!$User.Id}</expression>
    </formulas>
    <formulas>
        <name>setEmailMessage</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!FormulaEmailList}) == 0, {!txtNoEmail}, {!txtEmailAddressesExist})</expression>
    </formulas>
    <formulas>
        <name>VarPaymentExistsOnOrder</name>
        <dataType>Boolean</dataType>
        <expression>IF(!ISBLANK({!VarPaymentNumberOnOrder}), TRUE, FALSE)</expression>
    </formulas>
    <interviewLabel>Send Email Receipt {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Send Email Receipt</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Get the Contract Id</description>
        <name>Get_Contract_Id</name>
        <label>Get Contract Id</label>
        <locationX>590</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getFirstEmail</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarParentPaymentId</elementReference>
            </value>
        </filters>
        <object>Payment2__c</object>
        <outputAssignments>
            <assignToReference>VarContractId</assignToReference>
            <field>Contract__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Order_Data</name>
        <label>Get Order Data</label>
        <locationX>535</locationX>
        <locationY>571</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Order_Payment2_Transaction_Status</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarRecordID</elementReference>
            </value>
        </filters>
        <object>Order</object>
        <outputAssignments>
            <assignToReference>VarContractId</assignToReference>
            <field>ContractId</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>VarOrderPaidOnOrder</assignToReference>
            <field>Order_Paid__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>VarPaymentNumberOnOrder</assignToReference>
            <field>Payment2__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Order_Payment2_Transaction_Status</name>
        <label>Get Order-Payment2-Transaction_Status</label>
        <locationX>533</locationX>
        <locationY>390</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>OrderCanAReceiptBeIssued</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarPaymentNumberOnOrder</elementReference>
            </value>
        </filters>
        <object>Payment2__c</object>
        <outputAssignments>
            <assignToReference>VarContractId</assignToReference>
            <field>Contract__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>VarOrderPaymentTransactionStatus</assignToReference>
            <field>Transaction_Status__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Payment2_Data</name>
        <label>Get Payment2 Data</label>
        <locationX>319</locationX>
        <locationY>826</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ReceiptCanAReceiptBeIssued</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarRecordID</elementReference>
            </value>
        </filters>
        <object>Payment2__c</object>
        <outputAssignments>
            <assignToReference>VarContractId</assignToReference>
            <field>Contract__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>VarParentPaymentId</assignToReference>
            <field>Payment_2__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>VarPaymentType</assignToReference>
            <field>Payment_Type__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>VarPaymentTransactionStatus</assignToReference>
            <field>Transaction_Status__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>getContactEmail</name>
        <label>getContactEmail</label>
        <locationX>1058</locationX>
        <locationY>1006</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>isPrimaryContactBlank</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarContactId</elementReference>
            </value>
        </filters>
        <object>Contact</object>
        <outputAssignments>
            <assignToReference>VarContactEmail</assignToReference>
            <field>Email</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>getFirstEmail</name>
        <label>getFirstEmail</label>
        <locationX>846</locationX>
        <locationY>1007</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getContactEmail</targetReference>
        </connector>
        <filters>
            <field>ContractId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarContractId</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputAssignments>
            <assignToReference>VarContactId</assignToReference>
            <field>ContactId</field>
        </outputAssignments>
    </recordLookups>
    <screens>
        <name>addAnEmail</name>
        <label>addAnEmail</label>
        <locationX>1438</locationX>
        <locationY>974</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>isEmailBlank2</targetReference>
        </connector>
        <fields>
            <name>emailAddressesSentTo</name>
            <fieldText>&lt;p&gt;{!setEmailMessage}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!FormulaEmailList}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>addThisEmail</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>value</name>
                <value>
                    <stringValue></stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Add_another_email_address</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <booleanValue>false</booleanValue>
            </defaultValue>
            <fieldText>Add another email address</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Email_Error_Screen</name>
        <label>Email Error Screen</label>
        <locationX>1242</locationX>
        <locationY>295</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>EmailErrorMessage</name>
            <fieldText>&lt;p&gt;The receipts weren&apos;t sent. This is the error. Contact a Salesforce Admin for support:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!VarEmailErrorMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Email_Success_Screen</name>
        <label>Email Success Screen</label>
        <locationX>1491</locationX>
        <locationY>122</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SuccessMessage</name>
            <fieldText>&lt;p&gt;The receipt was successfully sent to the following Email Addresses:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!FormulaEmailList}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenNoEmail</name>
        <label>ScreenNoEmail</label>
        <locationX>1302</locationX>
        <locationY>759</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>addAnEmail</targetReference>
        </connector>
        <fields>
            <name>ScreenNoEmailNotice</name>
            <fieldText>&lt;p&gt;{!txtNoEmail}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenNoReceipt</name>
        <label>ScreenNoReceipt</label>
        <locationX>50</locationX>
        <locationY>1006</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>MessageNoReceipt</name>
            <fieldText>&lt;p&gt;A receipt cannot be issued for this payment as it&apos;s Status is neither &apos;Received&apos; nor &apos;Success&apos;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenOrderNoReceipt</name>
        <label>ScreenOrderNoReceipt</label>
        <locationX>842</locationX>
        <locationY>182</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>TextOrderNoReceipt</name>
            <fieldText>&lt;p&gt;The Order does not have a valid Payment. No Receipt can be issued.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>you_are_done</name>
        <label>you are done!</label>
        <locationX>1762</locationX>
        <locationY>478</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>ApexRestEmailService</targetReference>
        </connector>
        <fields>
            <name>whereEmailsGo</name>
            <fieldText>&lt;p&gt;The receipt will be sent to the following email addresses:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!FormulaEmailList}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>191</locationX>
        <locationY>45</locationY>
        <connector>
            <targetReference>Assign_RecordID</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>contractId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The RecordId of the detail page from which the flow is invoked</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RecordIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>txtEmailAddressesExist</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>txtNoEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VaraddMoreEmails</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarContactEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarContactId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The RecordID of the Contract associated with this SObject</description>
        <name>VarContractId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEmailErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEmailList</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarEmailReceiptSent</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarNumEmails</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>VarObjectNames</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarOrderPaidOnOrder</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarOrderPaymentTransactionStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The Payment Id of parent payment record for a refund.</description>
        <name>VarParentPaymentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarPaymentNumberOnOrder</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarPaymentTransactionStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Payment2__c.Payment_Type__c</description>
        <name>VarPaymentType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarRecordID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarSpaceComma</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarTick</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
