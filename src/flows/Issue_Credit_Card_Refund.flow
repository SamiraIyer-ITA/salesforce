<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <description>Get the object name of the calling record.</description>
        <name>Get_Object_Name</name>
        <label>Get Object Name</label>
        <locationX>50</locationX>
        <locationY>378</locationY>
        <actionName>Flow_ObjectNamesFromIds</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Object_Type</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DML_Error</targetReference>
        </faultConnector>
        <inputParameters>
            <name>ids</name>
            <value>
                <elementReference>RecordIds</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>objectName</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>Issue a credit card refund through Pay.gov.</description>
        <name>Issue_Credit_Card_Refund</name>
        <label>Issue Credit Card Refund</label>
        <locationX>1132</locationX>
        <locationY>66</locationY>
        <actionName>Flow_IssueCreditCardRefund</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Refund_Error</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DML_Error</targetReference>
        </faultConnector>
        <inputParameters>
            <name>orderRefundAmounts</name>
            <value>
                <elementReference>Refund_Amounts</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderRefundExplanations</name>
            <value>
                <elementReference>Refund_Explanations</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderRefundReasons</name>
            <value>
                <elementReference>Refund_Reasons</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orders</name>
            <value>
                <elementReference>SelectedOrders</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>errorMessage</assignToReference>
            <name>errorReasons</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>HasError</assignToReference>
            <name>hasError</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>Validate that the reduction orders are refundable.</description>
        <name>Validate_Selected_Orders</name>
        <label>Validate Selected Orders</label>
        <locationX>1000</locationX>
        <locationY>579</locationY>
        <actionName>Flow_ValidateRefundableOrders</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Determine_Order_Path</targetReference>
        </connector>
        <faultConnector>
            <targetReference>DML_Error</targetReference>
        </faultConnector>
        <inputParameters>
            <name>orders</name>
            <value>
                <elementReference>SelectedOrders</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>refundAmounts</name>
            <value>
                <elementReference>Refund_Amounts</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>refundExplanations</name>
            <value>
                <elementReference>Refund_Explanations</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>refundReasons</name>
            <value>
                <elementReference>Refund_Reasons</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>AccountType</assignToReference>
            <name>accountType</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Case_Description</assignToReference>
            <name>caseDescription</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>errorMessage</assignToReference>
            <name>invalidReasons</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>isValid</assignToReference>
            <name>isValid</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>NonCreditCardPayment</assignToReference>
            <name>nonCreditCardPayment</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>TotalAmount</assignToReference>
            <name>totalAmount</name>
        </outputParameters>
    </actionCalls>
    <assignments>
        <description>Assign Contract Id to a separate variable.</description>
        <name>Assign_Contract_Id</name>
        <label>Assign Contract Id</label>
        <locationX>483</locationX>
        <locationY>436</locationY>
        <assignmentItems>
            <assignToReference>ContractId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Select_Orders_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the DML Error to a variable.</description>
        <name>DML_Error</name>
        <label>DML Error</label>
        <locationX>398</locationX>
        <locationY>60</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>&lt;li&gt;{!$Flow.FaultMessage}&lt;/li&gt;</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Error_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the error message if the flow wasn&apos;t run from an Order or a Contract.</description>
        <name>Invalid_Object_Error</name>
        <label>Invalid Object Error</label>
        <locationX>444</locationX>
        <locationY>304</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>&lt;li&gt;This flow was run from an invalid object.&lt;/li&gt;</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Error_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the record Id to a List.</description>
        <name>Record_Id_to_List</name>
        <label>Record Id to List</label>
        <locationX>50</locationX>
        <locationY>195</locationY>
        <assignmentItems>
            <assignToReference>RecordIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Object_Name</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set the Contract Id from the Order.</description>
        <name>Set_Contract_and_Order_Details</name>
        <label>Set Contract and Order Details</label>
        <locationX>551</locationX>
        <locationY>570</locationY>
        <assignmentItems>
            <assignToReference>ContractId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Order.ContractId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SelectedOrders</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Order</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Order_Loop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Save the refund details into collections.</description>
        <name>Set_Refund_Details</name>
        <label>Set Refund Details</label>
        <locationX>1533</locationX>
        <locationY>623</locationY>
        <assignmentItems>
            <assignToReference>Refund_Reasons</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Refund_Reason</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Refund_Explanations</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Refund_Explanation</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Refund_Amounts</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Refund_Amount_As_Text</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Order_Loop</targetReference>
        </connector>
    </assignments>
    <choices>
        <description>The &apos;bank transfer&apos; payment type choice.</description>
        <name>BankTransferChoice</name>
        <choiceText>{!BANKTRANSFER}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>BANKTRANSFER</elementReference>
        </value>
    </choices>
    <choices>
        <description>The &apos;cash&apos; payment type choice.</description>
        <name>CashChoice</name>
        <choiceText>{!CASH}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>CASH</elementReference>
        </value>
    </choices>
    <choices>
        <description>The &apos;check&apos; payment type choice.</description>
        <name>CheckChoice</name>
        <choiceText>{!CHECK}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>CHECK</elementReference>
        </value>
    </choices>
    <constants>
        <description>The Bank Transfer payment type.</description>
        <name>BANKTRANSFER</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Bank Transfer</stringValue>
        </value>
    </constants>
    <constants>
        <description>The Cash payment type.</description>
        <name>CASH</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Cash</stringValue>
        </value>
    </constants>
    <constants>
        <description>The check payment type.</description>
        <name>CHECK</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Check</stringValue>
        </value>
    </constants>
    <constants>
        <name>CONTRACT</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Contract</stringValue>
        </value>
    </constants>
    <constants>
        <name>ORDER</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Order</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Whether the selected orders has a order that is not refundable.</description>
        <name>Determine_Order_Path</name>
        <label>Determine Order Path</label>
        <locationX>1125</locationX>
        <locationY>480</locationY>
        <defaultConnector>
            <targetReference>Record_Refund_Confirmation</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Has Refundable Orders</defaultConnectorLabel>
        <rules>
            <name>Has_an_Invalid_Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isValid</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Error_Screen</targetReference>
            </connector>
            <label>Has an Invalid Order</label>
        </rules>
        <rules>
            <name>Has_Non_Credit_Card_Payment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NonCreditCardPayment</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Non_Credit_Card_Payment</targetReference>
            </connector>
            <label>Has Non-Credit Card Payment</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines what to do for various object types.</description>
        <name>Object_Type</name>
        <label>Object Type</label>
        <locationX>42</locationX>
        <locationY>560</locationY>
        <defaultConnector>
            <targetReference>Invalid_Object_Error</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Error</defaultConnectorLabel>
        <rules>
            <name>Is_Contract</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>objectName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>CONTRACT</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Contract_Id</targetReference>
            </connector>
            <label>Is Contract</label>
        </rules>
        <rules>
            <name>Is_Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>objectName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ORDER</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Order</targetReference>
            </connector>
            <label>Is Order</label>
        </rules>
    </decisions>
    <decisions>
        <description>Handles if an error occurred while processing the refund.</description>
        <name>Refund_Error</name>
        <label>Refund Error</label>
        <locationX>846</locationX>
        <locationY>154</locationY>
        <defaultConnector>
            <targetReference>Done_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Error</defaultConnectorLabel>
        <rules>
            <name>Has_An_Error</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>HasError</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Error_Screen</targetReference>
            </connector>
            <label>Has An Error</label>
        </rules>
    </decisions>
    <description>Issue a refund for a credit card payment.</description>
    <dynamicChoiceSets>
        <description>The reason the refund is being given.</description>
        <name>RefundReason</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Refund_Reason__c</picklistField>
        <picklistObject>Payment2__c</picklistObject>
    </dynamicChoiceSets>
    <formulas>
        <description>The absolute value of the total amount.</description>
        <name>AbsoluteTotalAmount</name>
        <dataType>Currency</dataType>
        <expression>ABS({!TotalAmount})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <description>A part of the Case Description used in the Case created for NIST.  Each order will have it&apos;s own part.</description>
        <name>Case_Description_Part</name>
        <dataType>String</dataType>
        <expression>&quot;A refund of Refund_Amount is requested for x. The reason for the refund is Refund_Reason&quot; +
IF(! ISBLANK ({!Refund_Explanation}), &apos;: Refund_Explanation&apos;, &apos;.&apos;)</expression>
    </formulas>
    <formulas>
        <description>Convert the refund amount from currency to text.  Invocable methods don&apos;t allow currency/decimal values so it must be converted to text.</description>
        <name>Refund_Amount_As_Text</name>
        <dataType>String</dataType>
        <expression>TEXT({!Refund_Amount})</expression>
    </formulas>
    <formulas>
        <description>The amount that is available to be refunded, inside the Order Loop.</description>
        <name>RefundAmountAvailableInLoop</name>
        <dataType>Currency</dataType>
        <expression>{!Order_Record_In_Loop.TotalAmount} - {!Order_Record_In_Loop.Refunded_Amount__c}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Issue Credit Card Refund {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Issue Credit Card Refund</label>
    <loops>
        <description>Loop through each other to get the refund amount and reason for the refund.</description>
        <name>Order_Loop</name>
        <label>Order Loop</label>
        <locationX>785</locationX>
        <locationY>684</locationY>
        <assignNextValueToReference>Order_Record_In_Loop</assignNextValueToReference>
        <collectionReference>SelectedOrders</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Refund_Details</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Validate_Selected_Orders</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Gets the order record</description>
        <name>Get_Order</name>
        <label>Get Order</label>
        <locationX>382</locationX>
        <locationY>570</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Contract_and_Order_Details</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Type</queriedFields>
        <queriedFields>Payment2__c</queriedFields>
        <queriedFields>Order_Paid__c</queriedFields>
        <queriedFields>ContractId</queriedFields>
        <queriedFields>TotalAmount</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>Refunded_Amount__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Done_Screen</name>
        <label>Done Screen</label>
        <locationX>972</locationX>
        <locationY>280</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>DoneScreenDiplayText</name>
            <fieldText>&lt;p&gt;A refund of {!AbsoluteTotalAmount} has been issued.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays when an error occurs.</description>
        <name>Error_Screen</name>
        <label>Error Screen</label>
        <locationX>601</locationX>
        <locationY>304</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>displayTextErrorScreen</name>
            <fieldText>&lt;p&gt;Errors:&lt;/p&gt;&lt;p class=&quot;ql-indent-1&quot;&gt;{!errorMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Shown if an original order was not paid by credit card.  Will call another flow to create a case.</description>
        <name>Non_Credit_Card_Payment</name>
        <label>Non-Credit Card Payment</label>
        <locationX>1386</locationX>
        <locationY>479</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Create_Transaction_Management_Support_Case</targetReference>
        </connector>
        <fields>
            <name>nonCreditCardPaymentDisplayText</name>
            <fieldText>&lt;p&gt;A refund cannot be given through this system because the order was not paid by credit card.  Click &apos;Next&apos; to create a case for NIST, who will provide the refund.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Confirm that this refund should be recorded.</description>
        <name>Record_Refund_Confirmation</name>
        <label>Record Refund Confirmation</label>
        <locationX>1132</locationX>
        <locationY>282</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Issue_Credit_Card_Refund</targetReference>
        </connector>
        <fields>
            <name>recordRefundConfirmationText</name>
            <fieldText>&lt;p&gt;Are you sure you want to issue a refund?  Click the &apos;Next&apos; button to issue a refund of {!AbsoluteTotalAmount}.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Receive details about each order; the refund amount and the reason for the refund.</description>
        <name>Refund_Details</name>
        <label>Refund Details</label>
        <locationX>1397</locationX>
        <locationY>702</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Set_Refund_Details</targetReference>
        </connector>
        <fields>
            <name>OrderDetailsDisplayText</name>
            <fieldText>&lt;p&gt;Enter refund details for Order &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;&quot;{!Order_Record_In_Loop.Name}&quot;&lt;/span&gt;, for which {!RefundAmountAvailableInLoop} is refundable.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Refund_Amount</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <numberValue>0.0</numberValue>
            </defaultValue>
            <fieldText>Refund Amount</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;Refund Amount must be greater than zero and less than or equal&lt;/span&gt;&lt;span style=&quot;color: rgb(194, 57, 52); background-color: rgb(255, 255, 255);&quot;&gt; to {!RefundAmountAvailableInLoop}.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>AND (
{!Refund_Amount} &gt; 0,
{!Refund_Amount}&lt;={!RefundAmountAvailableInLoop}
)</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Refund_Reason</name>
            <choiceReferences>RefundReason</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Refund Reason</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Refund_Explanation</name>
            <dataType>String</dataType>
            <fieldText>Refund Explanation</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>1</conditionLogic>
                <conditions>
                    <leftValueReference>Refund_Reason</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Other</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Receive details about each order; the refund amount and the reason for the refund.</description>
        <name>Refund_Details</name>
        <label>Refund Details</label>
        <locationX>1397</locationX>
        <locationY>702</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Set_Refund_Details</targetReference>
        </connector>
        <fields>
            <name>OrderDetailsDisplayText</name>
            <fieldText>&lt;p&gt;Enter refund details for Order &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;&quot;{!Order_Record_In_Loop.Name}&quot;&lt;/span&gt;, for which {!RefundAmountAvailableInLoop} is refundable.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Refund_Amount</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <numberValue>0.0</numberValue>
            </defaultValue>
            <fieldText>Refund Amount</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;Refund Amount must be greater than zero and less than or equal&lt;/span&gt;&lt;span style=&quot;color: rgb(194, 57, 52); background-color: rgb(255, 255, 255);&quot;&gt; to {!RefundAmountAvailableInLoop}.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>AND (
{!Refund_Amount} &gt; 0,
{!Refund_Amount}&lt;={!RefundAmountAvailableInLoop}
)</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Refund_Reason</name>
            <choiceReferences>RefundReason</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Refund Reason</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Refund_Explanation</name>
            <dataType>String</dataType>
            <fieldText>Refund Explanation</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>1</conditionLogic>
                <conditions>
                    <leftValueReference>Refund_Reason</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Other</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Select the orders for which you want to record a payment.</description>
        <name>Select_Orders_Screen</name>
        <label>Select Orders Screen</label>
        <locationX>617</locationX>
        <locationY>436</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Order_Loop</targetReference>
        </connector>
        <fields>
            <name>ordersLWC</name>
            <extensionName>c:ordersForContract</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>actionType</name>
                <value>
                    <stringValue>Refund</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>ContractId</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>SelectedOrders</assignToReference>
                <name>selectedOrders</name>
            </outputParameters>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Record_Id_to_List</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Create a Transaction Management Support Case for NIST to issue a refund.</description>
        <name>Create_Transaction_Management_Support_Case</name>
        <label>Create Transaction Management Support Case</label>
        <locationX>1386</locationX>
        <locationY>309</locationY>
        <flowName>NIST_Support_Case</flowName>
        <inputAssignments>
            <name>caseDescription</name>
            <value>
                <elementReference>Case_Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>caseSubject</name>
            <value>
                <stringValue>Refund Request</stringValue>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>The account type for all orders.</description>
        <name>AccountType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>A description of the case created for NIST.</description>
        <name>Case_Description</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The cash payment type option.</description>
        <name>CashPaymentType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Cash</stringValue>
        </value>
    </variables>
    <variables>
        <description>The Contract Id.</description>
        <name>ContractId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Error message text.</description>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Whether an action resulted in an error.</description>
        <name>HasError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Whether there is an error.</description>
        <name>isValid</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>True if an original order was not paid by a credit card.</description>
        <name>NonCreditCardPayment</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The object name of the record id.</description>
        <name>objectName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>An order record, in the Order Loop.</description>
        <name>Order_Record_In_Loop</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <description>An individual Order Id in the list of selected Order Ids.</description>
        <name>OrderId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The selected payment type.</description>
        <name>PaymentType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The current record&apos;s Id.  This will be the Contract Id or the Order Id.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>A collection of record Ids.</description>
        <name>RecordIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>A collection of Refund Amounts</description>
        <name>Refund_Amounts</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>A collection of refund explanations.</description>
        <name>Refund_Explanations</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>A collection of refund reasons.</description>
        <name>Refund_Reasons</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The Id of the Payment 2 (Refund) record that was created.</description>
        <name>RefundId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Information about the selected orders, used in creating a case for NIST.</description>
        <name>SelectedOrderAsText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The selected orders.</description>
        <name>SelectedOrders</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <description>The total amount of the refund.</description>
        <name>TotalAmount</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>The string value of the total amount of the refund.</description>
        <name>TotalAmountString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
