{
    "dataSourceLinks":  [
                            {
                                "fields":  "   ",
                                "label":  "Fiscal_Year",
                                "name":  "Link_895"
                            }
                        ],
    "filters":  [

                ],
    "gridLayouts":  [
                        {
                            "maxWidth":  1200,
                            "name":  "Default",
                            "numColumns":  48,
                            "pages":  " ",
                            "rowHeight":  "fine",
                            "selectors":  "",
                            "style":  "@{alignmentX=left; alignmentY=top; backgroundColor=#091A3E; cellSpacingX=0; cellSpacingY=0; fit=fitwidth; gutterColor=#E6ECF2; image=}",
                            "version":  1.0
                        }
                    ],
    "layouts":  [

                ],
    "steps":  {
                  "Wins_All_MEA":  {
                                       "broadcastFacet":  false,
                                       "groups":  "",
                                       "label":  "lens_3",
                                       "numbers":  "",
                                       "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"All\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \u0027DAS_Label\u0027 == \"MEA\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                       "receiveFacet":  true,
                                       "selectMode":  "single",
                                       "strings":  "",
                                       "type":  "saql",
                                       "useGlobal":  true,
                                       "visualizationParameters":  "@{parameters=; type=table}"
                                   },
                  "Survey_Objectives_Asia":  {
                                                 "broadcastFacet":  false,
                                                 "groups":  "",
                                                 "label":  "lens_3",
                                                 "numbers":  "",
                                                 "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                                 "receiveFacet":  true,
                                                 "selectMode":  "single",
                                                 "strings":  "",
                                                 "type":  "saql",
                                                 "useGlobal":  true,
                                                 "visualizationParameters":  "@{parameters=; type=table}"
                                             },
                  "Assists_Investment_China":  {
                                                   "broadcastFacet":  false,
                                                   "groups":  "",
                                                   "label":  "lens_3",
                                                   "numbers":  "",
                                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"China\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                   "receiveFacet":  true,
                                                   "selectMode":  "single",
                                                   "strings":  "",
                                                   "type":  "saql",
                                                   "useGlobal":  true,
                                                   "visualizationParameters":  "@{parameters=; type=table}"
                                               },
                  "Wins_All_Asia":  {
                                        "broadcastFacet":  false,
                                        "groups":  "",
                                        "label":  "lens_3",
                                        "numbers":  "",
                                        "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"All\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                        "receiveFacet":  true,
                                        "selectMode":  "single",
                                        "strings":  "",
                                        "type":  "saql",
                                        "useGlobal":  true,
                                        "visualizationParameters":  "@{parameters=; type=table}"
                                    },
                  "Assists_Export_WH":  {
                                            "broadcastFacet":  false,
                                            "groups":  "",
                                            "label":  "lens_3",
                                            "numbers":  "",
                                            "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"WH\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                            "receiveFacet":  true,
                                            "selectMode":  "single",
                                            "strings":  "",
                                            "type":  "saql",
                                            "useGlobal":  true,
                                            "visualizationParameters":  "@{parameters=; type=table}"
                                        },
                  "Assists_Investment_Europe":  {
                                                    "broadcastFacet":  false,
                                                    "groups":  "",
                                                    "label":  "lens_3",
                                                    "numbers":  "",
                                                    "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Europe\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                    "receiveFacet":  true,
                                                    "selectMode":  "single",
                                                    "strings":  "",
                                                    "type":  "saql",
                                                    "useGlobal":  true,
                                                    "visualizationParameters":  "@{parameters=; type=table}"
                                                },
                  "Wins_InvestmentPromotion_GmAll":  {
                                                         "broadcastFacet":  false,
                                                         "groups":  "",
                                                         "label":  "lens_3",
                                                         "numbers":  "",
                                                         "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                         "receiveFacet":  true,
                                                         "selectMode":  "none",
                                                         "strings":  "",
                                                         "type":  "saql",
                                                         "useGlobal":  true,
                                                         "visualizationParameters":  "@{parameters=; type=table}"
                                                     },
                  "Wins_Advocacy_WH":  {
                                           "broadcastFacet":  false,
                                           "groups":  "",
                                           "label":  "lens_3",
                                           "numbers":  "",
                                           "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                           "receiveFacet":  true,
                                           "selectMode":  "single",
                                           "strings":  "",
                                           "type":  "saql",
                                           "useGlobal":  true,
                                           "visualizationParameters":  "@{parameters=; type=table}"
                                       },
                  "Assists_Export_GmAll":  {
                                               "broadcastFacet":  false,
                                               "groups":  "",
                                               "label":  "lens_3",
                                               "numbers":  "",
                                               "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                               "receiveFacet":  true,
                                               "selectMode":  "none",
                                               "strings":  "",
                                               "type":  "saql",
                                               "useGlobal":  true,
                                               "visualizationParameters":  "@{parameters=; type=table}"
                                           },
                  "Assists_Export_Europe":  {
                                                "broadcastFacet":  false,
                                                "groups":  "",
                                                "label":  "lens_3",
                                                "numbers":  "",
                                                "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Europe\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                "receiveFacet":  true,
                                                "selectMode":  "single",
                                                "strings":  "",
                                                "type":  "saql",
                                                "useGlobal":  true,
                                                "visualizationParameters":  "@{parameters=; type=table}"
                                            },
                  "Wins_All_China":  {
                                         "broadcastFacet":  false,
                                         "groups":  "",
                                         "label":  "lens_3",
                                         "numbers":  "",
                                         "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"All\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \u0027DAS_Label\u0027 == \"China\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                         "receiveFacet":  true,
                                         "selectMode":  "single",
                                         "strings":  "",
                                         "type":  "saql",
                                         "useGlobal":  true,
                                         "visualizationParameters":  "@{parameters=; type=table}"
                                     },
                  "all_3_1":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_3",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"China\"],\"in\"],[\"Primary_Outcome__c\",[\"Reduced/Removed/Prevented trade barrier\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_15":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "all_15",
                                 "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Asia\"],\"in\"],[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                 "receiveFacet":  true,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{parameters=; type=chart}"
                             },
                  "all_7_3":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"U.S.\"],\"in\"],[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_3_6":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_3",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"China\"],\"in\"],[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_7_5":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"U.S.\"],\"in\"],[\"RecordType.DeveloperName\",[\"Export_Promotion\",\"Export_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_13":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "all_13",
                                 "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Asia\"],\"in\"],[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                 "receiveFacet":  true,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{parameters=; type=chart}"
                             },
                  "Survey_Objectives_US":  {
                                               "broadcastFacet":  false,
                                               "groups":  "",
                                               "label":  "lens_3",
                                               "numbers":  "",
                                               "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                               "receiveFacet":  true,
                                               "selectMode":  "single",
                                               "strings":  "",
                                               "type":  "saql",
                                               "useGlobal":  true,
                                               "visualizationParameters":  "@{parameters=; type=table}"
                                           },
                  "all_14":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "all_14",
                                 "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Asia\"],\"in\"],[\"RecordType.DeveloperName\",[\"Export_Promotion\",\"Export_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                 "receiveFacet":  true,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{parameters=; type=chart}"
                             },
                  "all_7_4":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"U.S.\"],\"in\"],[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_3_3":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_3",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"China\"],\"in\"],[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_3_5":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_3",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"China\"],\"in\"],[\"RecordType.DeveloperName\",[\"Export_Promotion\",\"Export_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_7_1":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"U.S.\"],\"in\"],[\"Primary_Outcome__c\",[\"Reduced/Removed/Prevented trade barrier\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_3_4":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_3",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"China\"],\"in\"],[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_7_7":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Advocacy\"],\"in\"],[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_7_6":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"U.S.\"],\"in\"],[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_7_9":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Advocacy\"],\"in\"],[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_7_8":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_7",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"SUSA\"],\"in\"],[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Wins_CommercialDiplomacy_China":  {
                                                         "broadcastFacet":  false,
                                                         "groups":  "",
                                                         "label":  "lens_3",
                                                         "numbers":  "",
                                                         "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                         "receiveFacet":  true,
                                                         "selectMode":  "single",
                                                         "strings":  "",
                                                         "type":  "saql",
                                                         "useGlobal":  true,
                                                         "visualizationParameters":  "@{parameters=; type=table}"
                                                     },
                  "Wins_CommercialDiplomacy_Europe":  {
                                                          "broadcastFacet":  false,
                                                          "groups":  "",
                                                          "label":  "lens_3",
                                                          "numbers":  "",
                                                          "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                          "receiveFacet":  true,
                                                          "selectMode":  "single",
                                                          "strings":  "",
                                                          "type":  "saql",
                                                          "useGlobal":  true,
                                                          "visualizationParameters":  "@{parameters=; type=table}"
                                                      },
                  "lens_1":  {
                                 "broadcastFacet":  true,
                                 "groups":  "",
                                 "numbers":  "",
                                 "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                 "receiveFacet":  true,
                                 "selectMode":  "single",
                                 "strings":  "",
                                 "type":  "saql",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{parameters=; type=chart}"
                             },
                  "lens_2":  {
                                 "broadcastFacet":  true,
                                 "groups":  "",
                                 "label":  "lens_2",
                                 "numbers":  "",
                                 "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"SUSA\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                 "receiveFacet":  true,
                                 "selectMode":  "single",
                                 "strings":  "",
                                 "type":  "saql",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{parameters=; type=chart}"
                             },
                  "lens_3_28":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_27":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_26":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "Assists_Export_SUSA":  {
                                              "broadcastFacet":  false,
                                              "groups":  "",
                                              "label":  "lens_3",
                                              "numbers":  "",
                                              "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"SUSA\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                              "receiveFacet":  true,
                                              "selectMode":  "single",
                                              "strings":  "",
                                              "type":  "saql",
                                              "useGlobal":  true,
                                              "visualizationParameters":  "@{parameters=; type=table}"
                                          },
                  "lens_3_25":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "Assists_Investment_US":  {
                                                "broadcastFacet":  false,
                                                "groups":  "",
                                                "label":  "lens_3",
                                                "numbers":  "",
                                                "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"U.S.\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                "receiveFacet":  true,
                                                "selectMode":  "single",
                                                "strings":  "",
                                                "type":  "saql",
                                                "useGlobal":  true,
                                                "visualizationParameters":  "@{parameters=; type=table}"
                                            },
                  "lens_3_29":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "Wins_InvestmentPromotion_Europe":  {
                                                          "broadcastFacet":  false,
                                                          "groups":  "",
                                                          "label":  "lens_3",
                                                          "numbers":  "",
                                                          "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                          "receiveFacet":  true,
                                                          "selectMode":  "single",
                                                          "strings":  "",
                                                          "type":  "saql",
                                                          "useGlobal":  true,
                                                          "visualizationParameters":  "@{parameters=; type=table}"
                                                      },
                  "Wins_Advocacy_Advocacy":  {
                                                 "broadcastFacet":  false,
                                                 "groups":  "",
                                                 "label":  "lens_3",
                                                 "numbers":  "",
                                                 "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Advocacy\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Advocacy\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                 "receiveFacet":  true,
                                                 "selectMode":  "single",
                                                 "strings":  "",
                                                 "type":  "saql",
                                                 "useGlobal":  true,
                                                 "visualizationParameters":  "@{parameters=; type=table}"
                                             },
                  "Wins_All_GmAll":  {
                                         "broadcastFacet":  false,
                                         "groups":  "",
                                         "label":  "lens_3",
                                         "numbers":  "",
                                         "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"All\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                         "receiveFacet":  true,
                                         "selectMode":  "single",
                                         "strings":  "",
                                         "type":  "saql",
                                         "useGlobal":  true,
                                         "visualizationParameters":  "@{parameters=; type=table}"
                                     },
                  "Wins_InvestmentPromotion_WH":  {
                                                      "broadcastFacet":  false,
                                                      "groups":  "",
                                                      "label":  "lens_3",
                                                      "numbers":  "",
                                                      "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                      "receiveFacet":  true,
                                                      "selectMode":  "single",
                                                      "strings":  "",
                                                      "type":  "saql",
                                                      "useGlobal":  true,
                                                      "visualizationParameters":  "@{parameters=; type=table}"
                                                  },
                  "Wins_ExportPromotion_GmAll":  {
                                                     "broadcastFacet":  false,
                                                     "groups":  "",
                                                     "label":  "lens_3",
                                                     "numbers":  "",
                                                     "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                     "receiveFacet":  true,
                                                     "selectMode":  "none",
                                                     "strings":  "",
                                                     "type":  "saql",
                                                     "useGlobal":  true,
                                                     "visualizationParameters":  "@{parameters=; type=table}"
                                                 },
                  "Assists_Investment_Advocacy":  {
                                                      "broadcastFacet":  false,
                                                      "groups":  "",
                                                      "label":  "lens_3",
                                                      "numbers":  "",
                                                      "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Advocacy\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                      "receiveFacet":  true,
                                                      "selectMode":  "single",
                                                      "strings":  "",
                                                      "type":  "saql",
                                                      "useGlobal":  true,
                                                      "visualizationParameters":  "@{parameters=; type=table}"
                                                  },
                  "lens_3_20":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "Wins_InvestmentPromotion_China":  {
                                                         "broadcastFacet":  false,
                                                         "groups":  "",
                                                         "label":  "lens_3",
                                                         "numbers":  "",
                                                         "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                         "receiveFacet":  true,
                                                         "selectMode":  "single",
                                                         "strings":  "",
                                                         "type":  "saql",
                                                         "useGlobal":  true,
                                                         "visualizationParameters":  "@{parameters=; type=table}"
                                                     },
                  "lens_3_24":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_23":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "Wins_Barriers_MEA":  {
                                            "broadcastFacet":  false,
                                            "groups":  "",
                                            "label":  "lens_3",
                                            "numbers":  "",
                                            "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                            "receiveFacet":  true,
                                            "selectMode":  "single",
                                            "strings":  "",
                                            "type":  "saql",
                                            "useGlobal":  true,
                                            "visualizationParameters":  "@{parameters=; type=table}"
                                        },
                  "lens_3_22":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_21":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "Wins_Barriers_WH":  {
                                           "broadcastFacet":  false,
                                           "groups":  "",
                                           "label":  "lens_3",
                                           "numbers":  "",
                                           "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                           "receiveFacet":  true,
                                           "selectMode":  "single",
                                           "strings":  "",
                                           "type":  "saql",
                                           "useGlobal":  true,
                                           "visualizationParameters":  "@{parameters=; type=table}"
                                       },
                  "lens_3_17":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_6":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "lens_3_16":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_5":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "lens_3_15":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_8":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "Wins_CommercialDiplomacy_US":  {
                                                      "broadcastFacet":  false,
                                                      "groups":  "",
                                                      "label":  "lens_3",
                                                      "numbers":  "",
                                                      "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                      "receiveFacet":  true,
                                                      "selectMode":  "single",
                                                      "strings":  "",
                                                      "type":  "saql",
                                                      "useGlobal":  true,
                                                      "visualizationParameters":  "@{parameters=; type=table}"
                                                  },
                  "lens_3_14":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_7":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "Assists_Investment_MEA":  {
                                                 "broadcastFacet":  false,
                                                 "groups":  "",
                                                 "label":  "lens_3",
                                                 "numbers":  "",
                                                 "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"MEA\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                 "receiveFacet":  true,
                                                 "selectMode":  "single",
                                                 "strings":  "",
                                                 "type":  "saql",
                                                 "useGlobal":  true,
                                                 "visualizationParameters":  "@{parameters=; type=table}"
                                             },
                  "lens_3_9":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "lens_3_19":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_18":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "none",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "all_6_4":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_6",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"WH\"],\"in\"],[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_6_3":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_6",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"WH\"],\"in\"],[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Wins_CommercialDiplomacy_Asia":  {
                                                        "broadcastFacet":  false,
                                                        "groups":  "",
                                                        "label":  "lens_3",
                                                        "numbers":  "",
                                                        "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                        "receiveFacet":  true,
                                                        "selectMode":  "single",
                                                        "strings":  "",
                                                        "type":  "saql",
                                                        "useGlobal":  true,
                                                        "visualizationParameters":  "@{parameters=; type=chart}"
                                                    },
                  "all_6_6":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_6",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"WH\"],\"in\"],[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Wins_Advocacy_US":  {
                                           "broadcastFacet":  false,
                                           "groups":  "",
                                           "label":  "lens_3",
                                           "numbers":  "",
                                           "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                           "receiveFacet":  true,
                                           "selectMode":  "none",
                                           "strings":  "",
                                           "type":  "saql",
                                           "useGlobal":  true,
                                           "visualizationParameters":  "@{parameters=; type=table}"
                                       },
                  "all_6_5":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_6",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"WH\"],\"in\"],[\"RecordType.DeveloperName\",[\"Export_Promotion\",\"Export_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "lens_3_2":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "Wins_CommercialDiplomacy_MEA":  {
                                                       "broadcastFacet":  false,
                                                       "groups":  "",
                                                       "label":  "lens_3",
                                                       "numbers":  "",
                                                       "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                       "receiveFacet":  true,
                                                       "selectMode":  "single",
                                                       "strings":  "",
                                                       "type":  "saql",
                                                       "useGlobal":  true,
                                                       "visualizationParameters":  "@{parameters=; type=table}"
                                                   },
                  "Wins_Advocacy_Asia":  {
                                             "broadcastFacet":  false,
                                             "groups":  "",
                                             "label":  "lens_3",
                                             "numbers":  "",
                                             "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                             "receiveFacet":  true,
                                             "selectMode":  "single",
                                             "strings":  "",
                                             "type":  "saql",
                                             "useGlobal":  true,
                                             "visualizationParameters":  "@{parameters=; type=table}"
                                         },
                  "lens_3_1":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "lens_3_4":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "all_6_1":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_6",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"WH\"],\"in\"],[\"Primary_Outcome__c\",[\"Reduced/Removed/Prevented trade barrier\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "lens_3_3":  {
                                   "broadcastFacet":  false,
                                   "groups":  "",
                                   "label":  "lens_3",
                                   "numbers":  "",
                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                   "receiveFacet":  true,
                                   "selectMode":  "single",
                                   "strings":  "",
                                   "type":  "saql",
                                   "useGlobal":  true,
                                   "visualizationParameters":  "@{parameters=; type=table}"
                               },
                  "Wins_InvestmentPromotion_SUSA":  {
                                                        "broadcastFacet":  false,
                                                        "groups":  "",
                                                        "label":  "lens_3",
                                                        "numbers":  "",
                                                        "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"SUSA\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"SUSA\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                        "receiveFacet":  true,
                                                        "selectMode":  "single",
                                                        "strings":  "",
                                                        "type":  "saql",
                                                        "useGlobal":  true,
                                                        "visualizationParameters":  "@{parameters=; type=table}"
                                                    },
                  "lens_3_13":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "single",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_12":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "single",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_11":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "single",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "lens_3_10":  {
                                    "broadcastFacet":  false,
                                    "groups":  "",
                                    "label":  "lens_3",
                                    "numbers":  "",
                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                    "receiveFacet":  true,
                                    "selectMode":  "single",
                                    "strings":  "",
                                    "type":  "saql",
                                    "useGlobal":  true,
                                    "visualizationParameters":  "@{parameters=; type=table}"
                                },
                  "Wins_Barriers_US":  {
                                           "broadcastFacet":  false,
                                           "groups":  "",
                                           "label":  "lens_3",
                                           "numbers":  "",
                                           "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                           "receiveFacet":  true,
                                           "selectMode":  "single",
                                           "strings":  "",
                                           "type":  "saql",
                                           "useGlobal":  true,
                                           "visualizationParameters":  "@{parameters=; type=table}"
                                       },
                  "Survey_Objectives_Europe":  {
                                                   "broadcastFacet":  false,
                                                   "groups":  "",
                                                   "label":  "lens_3",
                                                   "numbers":  "",
                                                   "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                                   "receiveFacet":  true,
                                                   "selectMode":  "single",
                                                   "strings":  "",
                                                   "type":  "saql",
                                                   "useGlobal":  true,
                                                   "visualizationParameters":  "@{parameters=; type=table}"
                                               },
                  "Wins_Advocacy_Europe":  {
                                               "broadcastFacet":  false,
                                               "groups":  "",
                                               "label":  "lens_3",
                                               "numbers":  "",
                                               "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                               "receiveFacet":  true,
                                               "selectMode":  "single",
                                               "strings":  "",
                                               "type":  "saql",
                                               "useGlobal":  true,
                                               "visualizationParameters":  "@{parameters=; type=table}"
                                           },
                  "Wins_InvestmentPromotion_US":  {
                                                      "broadcastFacet":  false,
                                                      "groups":  "",
                                                      "label":  "lens_3",
                                                      "numbers":  "",
                                                      "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                      "receiveFacet":  true,
                                                      "selectMode":  "single",
                                                      "strings":  "",
                                                      "type":  "saql",
                                                      "useGlobal":  true,
                                                      "visualizationParameters":  "@{parameters=; type=table}"
                                                  },
                  "all_7":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "label":  "all_7",
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"U.S.\"],\"in\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "all_6":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "label":  "all_6",
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"WH\"],\"in\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "Wins_All_Europe":  {
                                          "broadcastFacet":  false,
                                          "groups":  "",
                                          "label":  "lens_3",
                                          "numbers":  "",
                                          "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"All\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \u0027DAS_Label\u0027 == \"Europe\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                          "receiveFacet":  true,
                                          "selectMode":  "single",
                                          "strings":  "",
                                          "type":  "saql",
                                          "useGlobal":  true,
                                          "visualizationParameters":  "@{parameters=; type=table}"
                                      },
                  "all_9":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "label":  "all_9",
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Asia\"],\"in\"],[\"Primary_Outcome__c\",[\"Reduced/Removed/Prevented trade barrier\"],\"in\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "all_8":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "label":  "all_8",
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "Assists_Investment_WH":  {
                                                "broadcastFacet":  false,
                                                "groups":  "",
                                                "label":  "lens_3",
                                                "numbers":  "",
                                                "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"WH\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                "receiveFacet":  true,
                                                "selectMode":  "single",
                                                "strings":  "",
                                                "type":  "saql",
                                                "useGlobal":  true,
                                                "visualizationParameters":  "@{parameters=; type=table}"
                                            },
                  "all_1":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "Wins_ExportPromotion_US":  {
                                                  "broadcastFacet":  false,
                                                  "groups":  "",
                                                  "label":  "lens_3",
                                                  "numbers":  "",
                                                  "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                  "receiveFacet":  true,
                                                  "selectMode":  "single",
                                                  "strings":  "",
                                                  "type":  "saql",
                                                  "useGlobal":  true,
                                                  "visualizationParameters":  "@{parameters=; type=table}"
                                              },
                  "all_3":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "label":  "all_3",
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"China\"],\"in\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "all_2":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Asia\"],\"in\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "Fiscal_Year_1":  {
                                        "broadcastFacet":  true,
                                        "groups":  "",
                                        "label":  "Fiscal_Year_1",
                                        "numbers":  "",
                                        "query":  "q = load \"Global_Markets_Contributor_Taxonomy\";\nq = group q by \u0027Fiscal_Year\u0027;\nq = foreach q generate \u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, count() as \u0027count\u0027;\nq = order q by \u0027Fiscal_Year\u0027 desc;\nq = limit q 2000;",
                                        "receiveFacet":  true,
                                        "selectMode":  "singlerequired",
                                        "strings":  "",
                                        "type":  "saql",
                                        "useGlobal":  true,
                                        "visualizationParameters":  "@{parameters=; type=chart}"
                                    },
                  "all_5":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "label":  "all_5",
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"MEA\"],\"in\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "all_4":  {
                                "broadcastFacet":  true,
                                "datasets":  "",
                                "isGlobal":  false,
                                "label":  "all_4",
                                "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Europe\"],\"in\"]]}; version=-1.0}",
                                "receiveFacet":  true,
                                "selectMode":  "single",
                                "type":  "aggregateflex",
                                "useGlobal":  true,
                                "visualizationParameters":  "@{parameters=; type=chart}"
                            },
                  "Wins_Advocacy_China":  {
                                              "broadcastFacet":  false,
                                              "groups":  "",
                                              "label":  "lens_3",
                                              "numbers":  "",
                                              "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                              "receiveFacet":  true,
                                              "selectMode":  "single",
                                              "strings":  "",
                                              "type":  "saql",
                                              "useGlobal":  true,
                                              "visualizationParameters":  "@{parameters=; type=table}"
                                          },
                  "Wins_CommercialDiplomacy_Advocacy":  {
                                                            "broadcastFacet":  false,
                                                            "groups":  "",
                                                            "label":  "lens_3",
                                                            "numbers":  "",
                                                            "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Advocacy\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Advocacy\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                            "receiveFacet":  true,
                                                            "selectMode":  "single",
                                                            "strings":  "",
                                                            "type":  "saql",
                                                            "useGlobal":  true,
                                                            "visualizationParameters":  "@{parameters=; type=table}"
                                                        },
                  "Assists_Export_China":  {
                                               "broadcastFacet":  false,
                                               "groups":  "",
                                               "label":  "lens_3",
                                               "numbers":  "",
                                               "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"China\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                               "receiveFacet":  true,
                                               "selectMode":  "single",
                                               "strings":  "",
                                               "type":  "saql",
                                               "useGlobal":  true,
                                               "visualizationParameters":  "@{parameters=; type=table}"
                                           },
                  "Wins_InvestmentPromotion_MEA":  {
                                                       "broadcastFacet":  false,
                                                       "groups":  "",
                                                       "label":  "lens_3",
                                                       "numbers":  "",
                                                       "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                       "receiveFacet":  true,
                                                       "selectMode":  "single",
                                                       "strings":  "",
                                                       "type":  "saql",
                                                       "useGlobal":  true,
                                                       "visualizationParameters":  "@{parameters=; type=table}"
                                                   },
                  "Wins_Advocacy_MEA":  {
                                            "broadcastFacet":  false,
                                            "groups":  "",
                                            "label":  "lens_3",
                                            "numbers":  "",
                                            "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                            "receiveFacet":  true,
                                            "selectMode":  "single",
                                            "strings":  "",
                                            "type":  "saql",
                                            "useGlobal":  true,
                                            "visualizationParameters":  "@{parameters=; type=table}"
                                        },
                  "all_5_5":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_5",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"MEA\"],\"in\"],[\"RecordType.DeveloperName\",[\"Export_Promotion\",\"Export_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_5_4":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_5",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"MEA\"],\"in\"],[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Wins_ExportPromotion_China":  {
                                                     "broadcastFacet":  false,
                                                     "groups":  "",
                                                     "label":  "lens_3",
                                                     "numbers":  "",
                                                     "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                     "receiveFacet":  true,
                                                     "selectMode":  "single",
                                                     "strings":  "",
                                                     "type":  "saql",
                                                     "useGlobal":  true,
                                                     "visualizationParameters":  "@{parameters=; type=table}"
                                                 },
                  "Assists_Investment_SUSA":  {
                                                  "broadcastFacet":  false,
                                                  "groups":  "",
                                                  "label":  "lens_3",
                                                  "numbers":  "",
                                                  "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"SUSA\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                  "receiveFacet":  true,
                                                  "selectMode":  "single",
                                                  "strings":  "",
                                                  "type":  "saql",
                                                  "useGlobal":  true,
                                                  "visualizationParameters":  "@{parameters=; type=table}"
                                              },
                  "all_5_6":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_5",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"MEA\"],\"in\"],[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_5_1":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_5",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"MEA\"],\"in\"],[\"Primary_Outcome__c\",[\"Reduced/Removed/Prevented trade barrier\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Survey_Objectives_Advocacy":  {
                                                     "broadcastFacet":  false,
                                                     "groups":  "",
                                                     "label":  "lens_3",
                                                     "numbers":  "",
                                                     "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Advocacy\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                                     "receiveFacet":  true,
                                                     "selectMode":  "single",
                                                     "strings":  "",
                                                     "type":  "saql",
                                                     "useGlobal":  true,
                                                     "visualizationParameters":  "@{parameters=; type=table}"
                                                 },
                  "Wins_InvestmentPromotion_Asia":  {
                                                        "broadcastFacet":  false,
                                                        "groups":  "",
                                                        "label":  "lens_3",
                                                        "numbers":  "",
                                                        "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Investment Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Investment_Promotion\", \n        \"Investment_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                        "receiveFacet":  true,
                                                        "selectMode":  "single",
                                                        "strings":  "",
                                                        "type":  "saql",
                                                        "useGlobal":  true,
                                                        "visualizationParameters":  "@{parameters=; type=table}"
                                                    },
                  "all_5_3":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_5",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"MEA\"],\"in\"],[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Survey_Objectives_China":  {
                                                  "broadcastFacet":  false,
                                                  "groups":  "",
                                                  "label":  "lens_3",
                                                  "numbers":  "",
                                                  "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                                  "receiveFacet":  true,
                                                  "selectMode":  "single",
                                                  "strings":  "",
                                                  "type":  "saql",
                                                  "useGlobal":  true,
                                                  "visualizationParameters":  "@{parameters=; type=table}"
                                              },
                  "Wins_ExportPromotion_Asia":  {
                                                    "broadcastFacet":  false,
                                                    "groups":  "",
                                                    "label":  "lens_3",
                                                    "numbers":  "",
                                                    "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                    "receiveFacet":  true,
                                                    "selectMode":  "single",
                                                    "strings":  "",
                                                    "type":  "saql",
                                                    "useGlobal":  true,
                                                    "visualizationParameters":  "@{parameters=; type=table}"
                                                },
                  "Wins_All_WH":  {
                                      "broadcastFacet":  false,
                                      "groups":  "",
                                      "label":  "lens_3",
                                      "numbers":  "",
                                      "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"All\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \u0027DAS_Label\u0027 == \"WH\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                      "receiveFacet":  true,
                                      "selectMode":  "single",
                                      "strings":  "",
                                      "type":  "saql",
                                      "useGlobal":  true,
                                      "visualizationParameters":  "@{parameters=; type=table}"
                                  },
                  "Wins_Barriers_China":  {
                                              "broadcastFacet":  false,
                                              "groups":  "",
                                              "label":  "lens_3",
                                              "numbers":  "",
                                              "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"China\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                              "receiveFacet":  true,
                                              "selectMode":  "single",
                                              "strings":  "",
                                              "type":  "saql",
                                              "useGlobal":  true,
                                              "visualizationParameters":  "@{parameters=; type=table}"
                                          },
                  "Wins_CommercialDiplomacy_WH":  {
                                                      "broadcastFacet":  false,
                                                      "groups":  "",
                                                      "label":  "lens_3",
                                                      "numbers":  "",
                                                      "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                      "receiveFacet":  true,
                                                      "selectMode":  "single",
                                                      "strings":  "",
                                                      "type":  "saql",
                                                      "useGlobal":  true,
                                                      "visualizationParameters":  "@{parameters=; type=table}"
                                                  },
                  "Wins_All_US":  {
                                      "broadcastFacet":  false,
                                      "groups":  "",
                                      "label":  "lens_3",
                                      "numbers":  "",
                                      "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"All\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"U.S.\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \u0027DAS_Label\u0027 == \"U.S.\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                      "receiveFacet":  true,
                                      "selectMode":  "single",
                                      "strings":  "",
                                      "type":  "saql",
                                      "useGlobal":  true,
                                      "visualizationParameters":  "@{parameters=; type=table}"
                                  },
                  "Survey_Objectives_SUSA":  {
                                                 "broadcastFacet":  false,
                                                 "groups":  "",
                                                 "label":  "lens_3",
                                                 "numbers":  "",
                                                 "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"SUSA\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                                 "receiveFacet":  true,
                                                 "selectMode":  "single",
                                                 "strings":  "",
                                                 "type":  "saql",
                                                 "useGlobal":  true,
                                                 "visualizationParameters":  "@{parameters=; type=table}"
                                             },
                  "Wins_ExportPromotion_WH":  {
                                                  "broadcastFacet":  false,
                                                  "groups":  "",
                                                  "label":  "lens_3",
                                                  "numbers":  "",
                                                  "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                  "receiveFacet":  true,
                                                  "selectMode":  "single",
                                                  "strings":  "",
                                                  "type":  "saql",
                                                  "useGlobal":  true,
                                                  "visualizationParameters":  "@{parameters=; type=table}"
                                              },
                  "Assists_Investment_GmAll":  {
                                                   "broadcastFacet":  false,
                                                   "groups":  "",
                                                   "label":  "lens_3",
                                                   "numbers":  "",
                                                   "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                   "receiveFacet":  true,
                                                   "selectMode":  "none",
                                                   "strings":  "",
                                                   "type":  "saql",
                                                   "useGlobal":  true,
                                                   "visualizationParameters":  "@{parameters=; type=table}"
                                               },
                  "Assists_Export_MEA":  {
                                             "broadcastFacet":  false,
                                             "groups":  "",
                                             "label":  "lens_3",
                                             "numbers":  "",
                                             "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"MEA\"];\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                             "receiveFacet":  true,
                                             "selectMode":  "single",
                                             "strings":  "",
                                             "type":  "saql",
                                             "useGlobal":  true,
                                             "visualizationParameters":  "@{parameters=; type=table}"
                                         },
                  "Wins_Barriers_Europe":  {
                                               "broadcastFacet":  false,
                                               "groups":  "",
                                               "label":  "lens_3",
                                               "numbers":  "",
                                               "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                               "receiveFacet":  true,
                                               "selectMode":  "single",
                                               "strings":  "",
                                               "type":  "saql",
                                               "useGlobal":  true,
                                               "visualizationParameters":  "@{parameters=; type=table}"
                                           },
                  "all_12":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "all_12",
                                 "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Asia\"],\"in\"],[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                 "receiveFacet":  true,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{parameters=; type=chart}"
                             },
                  "Assists_Export_US":  {
                                            "broadcastFacet":  false,
                                            "groups":  "",
                                            "label":  "lens_3",
                                            "numbers":  "",
                                            "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"U.S.\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                            "receiveFacet":  true,
                                            "selectMode":  "single",
                                            "strings":  "",
                                            "type":  "saql",
                                            "useGlobal":  true,
                                            "visualizationParameters":  "@{parameters=; type=table}"
                                        },
                  "Wins_ExportPromotion_MEA":  {
                                                   "broadcastFacet":  false,
                                                   "groups":  "",
                                                   "label":  "lens_3",
                                                   "numbers":  "",
                                                   "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                   "receiveFacet":  true,
                                                   "selectMode":  "single",
                                                   "strings":  "",
                                                   "type":  "saql",
                                                   "useGlobal":  true,
                                                   "visualizationParameters":  "@{parameters=; type=table}"
                                               },
                  "Survey_Objectives_WH":  {
                                               "broadcastFacet":  false,
                                               "groups":  "",
                                               "label":  "lens_3",
                                               "numbers":  "",
                                               "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"WH\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                               "receiveFacet":  true,
                                               "selectMode":  "single",
                                               "strings":  "",
                                               "type":  "saql",
                                               "useGlobal":  true,
                                               "visualizationParameters":  "@{parameters=; type=table}"
                                           },
                  "Assists_Investment_Asia":  {
                                                  "broadcastFacet":  false,
                                                  "groups":  "",
                                                  "label":  "lens_3",
                                                  "numbers":  "",
                                                  "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Investment Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                  "receiveFacet":  true,
                                                  "selectMode":  "single",
                                                  "strings":  "",
                                                  "type":  "saql",
                                                  "useGlobal":  true,
                                                  "visualizationParameters":  "@{parameters=; type=table}"
                                              },
                  "all_4_6":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_4",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Europe\"],\"in\"],[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_4_5":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_4",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Europe\"],\"in\"],[\"RecordType.DeveloperName\",[\"Export_Promotion\",\"Export_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_8_1":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_8",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Primary_Outcome__c\",[\"Reduced/Removed/Prevented trade barrier\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_8_4":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_8",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_8_3":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_8",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_4_1":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_4",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Europe\"],\"in\"],[\"Primary_Outcome__c\",[\"Reduced/Removed/Prevented trade barrier\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_4_4":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_4",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Europe\"],\"in\"],[\"RecordType.DeveloperName\",[\"Advocacy\",\"Advocacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_4_3":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_4",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"Related.Contributors.DAS\",[\"Europe\"],\"in\"],[\"RecordType.DeveloperName\",[\"Commercial_Diplomacy\",\"Commercial_Diplomacy_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Wins_Barriers_Asia":  {
                                             "broadcastFacet":  false,
                                             "groups":  "",
                                             "label":  "lens_3",
                                             "numbers":  "",
                                             "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Asia\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                             "receiveFacet":  true,
                                             "selectMode":  "single",
                                             "strings":  "",
                                             "type":  "saql",
                                             "useGlobal":  true,
                                             "visualizationParameters":  "@{parameters=; type=table}"
                                         },
                  "all_8_6":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_8",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"RecordType.DeveloperName\",[\"Investment_Promotion\",\"Investment_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "all_8_5":  {
                                  "broadcastFacet":  true,
                                  "datasets":  "",
                                  "isGlobal":  false,
                                  "label":  "all_8",
                                  "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"RecordType.DeveloperName\",[\"Export_Promotion\",\"Export_Promotion_Locked\"],\"in\"]]}; version=-1.0}",
                                  "receiveFacet":  true,
                                  "selectMode":  "single",
                                  "type":  "aggregateflex",
                                  "useGlobal":  true,
                                  "visualizationParameters":  "@{parameters=; type=chart}"
                              },
                  "Wins_ExportPromotion_Europe":  {
                                                      "broadcastFacet":  false,
                                                      "groups":  "",
                                                      "label":  "lens_3",
                                                      "numbers":  "",
                                                      "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Export Promotion\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Export_Promotion\", \n        \"Export_Promotion_Locked\"\n    ] \u0026\u0026 \u0027DAS_Label\u0027 == \"Europe\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                      "receiveFacet":  true,
                                                      "selectMode":  "single",
                                                      "strings":  "",
                                                      "type":  "saql",
                                                      "useGlobal":  true,
                                                      "visualizationParameters":  "@{parameters=; type=table}"
                                                  },
                  "Assists_Export_Advocacy":  {
                                                  "broadcastFacet":  false,
                                                  "groups":  "",
                                                  "label":  "lens_3",
                                                  "numbers":  "",
                                                  "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Advocacy\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                  "receiveFacet":  true,
                                                  "selectMode":  "single",
                                                  "strings":  "",
                                                  "type":  "saql",
                                                  "useGlobal":  true,
                                                  "visualizationParameters":  "@{parameters=; type=table}"
                                              },
                  "Survey_Objectives_MEA":  {
                                                "broadcastFacet":  false,
                                                "groups":  "",
                                                "label":  "lens_3",
                                                "numbers":  "",
                                                "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"MEA\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                                "receiveFacet":  true,
                                                "selectMode":  "single",
                                                "strings":  "",
                                                "type":  "saql",
                                                "useGlobal":  true,
                                                "visualizationParameters":  "@{parameters=; type=table}"
                                            },
                  "Survey_Objectives_GmAll":  {
                                                  "broadcastFacet":  false,
                                                  "groups":  "",
                                                  "label":  "lens_3",
                                                  "numbers":  "",
                                                  "query":  "-- Load target and data\r\ntarget = load \"Global_Markets_DAS_Targets\";\r\ntarget = filter target by\r\n    \u0027Parent_Type\u0027 == \"Survey\"\r\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Fee-Based Services Objectives Met\"\r\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\r\nresult = foreach target generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    case \u0027DAS_Label\u0027\r\n        when \"Asia\" then 89\r\n        when \"China\" then 87\r\n        when \"Europe\" then 89\r\n        when \"MEA\" then 85\r\n        when \"WH\" then 82\r\n        when \"U.S.\" then 87\r\n        when \"GM All\" then 87\r\n        else 0\r\n    end as \u0027Total_Actual\u0027, \r\n    \u0027Target\u0027 as \u0027Total_Target\u0027;\r\nresult = foreach result generate \r\n    \u0027Fiscal_Year\u0027, \r\n    \u0027DAS_Label\u0027, \r\n    \u0027Total_Actual\u0027, \r\n    \u0027Total_Target\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\r\n        when \u0027Total_Actual\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\r\n        else \"rgb(149, 255, 176)\"\r\n    end as \u0027Color\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Actual\u0027 / \u0027Total_Target\u0027 * 100, 0)\r\n        else -1\r\n    end as \u0027Target_Percent_Gauge\u0027, \r\n    case \r\n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Target_Label\u0027, \r\n    case \r\n        when \u0027Total_Actual\u0027 \u003e 0 then number_to_string(\u0027Total_Actual\u0027 / 100, \"##0%\")\r\n        else \"(NT)\"\r\n    end as \u0027Actual_Label\u0027;",
                                                  "receiveFacet":  true,
                                                  "selectMode":  "single",
                                                  "strings":  "",
                                                  "type":  "saql",
                                                  "useGlobal":  true,
                                                  "visualizationParameters":  "@{parameters=; type=table}"
                                              },
                  "Wins_CommercialDiplomacy_GmAll":  {
                                                         "broadcastFacet":  false,
                                                         "groups":  "",
                                                         "label":  "lens_3",
                                                         "numbers":  "",
                                                         "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Commercial Diplomacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Commercial_Diplomacy\", \n        \"Commercial_Diplomacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                                         "receiveFacet":  true,
                                                         "selectMode":  "none",
                                                         "strings":  "",
                                                         "type":  "saql",
                                                         "useGlobal":  true,
                                                         "visualizationParameters":  "@{parameters=; type=table}"
                                                     },
                  "Wins_Barriers_GmAll":  {
                                              "broadcastFacet":  false,
                                              "groups":  "",
                                              "label":  "lens_3",
                                              "numbers":  "",
                                              "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Trade Barriers\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.Primary_Outcome__c\u0027 == \"Reduced/Removed/Prevented trade barrier\";\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                              "receiveFacet":  true,
                                              "selectMode":  "none",
                                              "strings":  "",
                                              "type":  "saql",
                                              "useGlobal":  true,
                                              "visualizationParameters":  "@{parameters=; type=table}"
                                          },
                  "Assists_Export_Asia":  {
                                              "broadcastFacet":  false,
                                              "groups":  "",
                                              "label":  "lens_3",
                                              "numbers":  "",
                                              "query":  "data = load \"Global_Markets_Contributor_Taxonomy\";\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 in [\"Assist\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"];\n\ndata = filter data by \n    \u0027Parent_Type\u0027 in [\"Light Touch\", \"In-Depth Touch\"]\n    \u0026\u0026 \u0027Assist_Type\u0027 in [\"Export Promotion\"]\n    \u0026\u0026 \u0027DAS_Label\u0027 in [\"Asia\"];\n\ndata = group data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    unique(\u0027Organization.Id\u0027) as \u0027Total_Assists\u0027;\n\nresult = cogroup data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027) left, target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027, \u0027Assist_Type\u0027);\nresult = foreach result generate \n    data.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    data.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    data.\u0027Assist_Type\u0027 as \u0027Assist_Type\u0027, \n    sum(data.\u0027Total_Assists\u0027) as \u0027Total_Assists\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Assist_Type\u0027, \n    \u0027Total_Assists\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Total_Assists\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Total_Assists\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                              "receiveFacet":  true,
                                              "selectMode":  "single",
                                              "strings":  "",
                                              "type":  "saql",
                                              "useGlobal":  true,
                                              "visualizationParameters":  "@{parameters=; type=table}"
                                          },
                  "Wins_Advocacy_GmAll":  {
                                              "broadcastFacet":  false,
                                              "groups":  "",
                                              "label":  "lens_3",
                                              "numbers":  "",
                                              "query":  "-- Load target and data\ntarget = load \"Global_Markets_DAS_Targets\";\ntarget = filter target by\n    \u0027Parent_Type\u0027 == \"WIN\"\n    \u0026\u0026 \u0027Assist_Type\u0027== \"Advocacy\"\n    \u0026\u0026 \u0027DAS_Label\u0027 == \"GM All\";\n\ndata = load \"Global_Markets_WIN_Contributor\";\ndata = filter data by \n    \u0027Win.RecordType.DeveloperName\u0027 in [\n        \"Advocacy\", \n        \"Advocacy_Locked\"\n    ];\n\n-- Aggregate out Win_RecordType_DeveloperName_Short, i.e., group by \u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027\ndata = group data by (\u0027Fiscal_Year\u0027);\ndata = foreach data generate \n    \u0027Fiscal_Year\u0027, \n    \"GM All\" as \u0027DAS_Label\u0027, \n    unique(\u0027Win.Id\u0027) as \u0027Unique_WINs\u0027;\n\n-- Join/cogroup target to data\nresult = cogroup target by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027) left, data by (\u0027Fiscal_Year\u0027, \u0027DAS_Label\u0027);\nresult = foreach result generate \n    target.\u0027Fiscal_Year\u0027 as \u0027Fiscal_Year\u0027, \n    target.\u0027DAS_Label\u0027 as \u0027DAS_Label\u0027, \n    case \n        when sum(data.\u0027Unique_WINs\u0027) is null then 0\n        else sum(data.\u0027Unique_WINs\u0027)\n    end as \u0027Unique_WINs\u0027, \n    sum(target.\u0027Target\u0027) as \u0027Total_Target\u0027;\n    \nresult = foreach result generate \n    \u0027Fiscal_Year\u0027, \n    \u0027DAS_Label\u0027, \n    \u0027Unique_WINs\u0027, \n    \u0027Total_Target\u0027, \n    case \n        when \u0027Total_Target\u0027 \u003c= 0 then \"#FFFFFF\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c .50 then \"rgb(255, 152, 151)\"\n        when \u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 \u003c 1 then \"rgb(255, 205, 149)\"\n        else \"rgb(149, 255, 176)\"\n    end as \u0027Color\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then round(\u0027Unique_WINs\u0027 / \u0027Total_Target\u0027 * 100, 0)\n        else 0\n    end as \u0027Target_Percent_Gauge\u0027,  \n    case \n        when \u0027Total_Target\u0027 \u003e 0 then number_to_string(\u0027Total_Target\u0027, \"###,###,###,##0\")\n        else \"(NT)\"\n    end as \u0027Target_Label\u0027;",
                                              "receiveFacet":  true,
                                              "selectMode":  "none",
                                              "strings":  "",
                                              "type":  "saql",
                                              "useGlobal":  true,
                                              "visualizationParameters":  "@{parameters=; type=table}"
                                          }
              },
    "widgetStyle":  {
                        "backgroundColor":  "rgba(255, 255, 255, 0)",
                        "borderColor":  "#7D98B3",
                        "borderEdges":  [

                                        ],
                        "borderRadius":  0,
                        "borderWidth":  1
                    },
    "widgets":  {
                    "text_94":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_93":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_95":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_90":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "chart_9":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Survey_Objectives_Asia; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "text_92":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_91":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "chart_6":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_US; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "text_3":  {
                                   "parameters":  "@{fontSize=12; text=  Target has been met; textAlignment=left; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "chart_5":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_WH; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "text_2":  {
                                   "parameters":  "@{fontSize=20; text=; textAlignment=center; textColor=#091A3E}",
                                   "type":  "text"
                               },
                    "text_5":  {
                                   "parameters":  "@{fontSize=20; text=Global Markets Performance Measures \u0026 Targets by Region; textAlignment=left; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "chart_8":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_GmAll; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "chart_7":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_Advocacy; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "text_4":  {
                                   "parameters":  "@{fontSize=12; text=  Performance under the target; textAlignment=left; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "text_7":  {
                                   "parameters":  "@{fontSize=13; text=; textAlignment=center; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "chart_2":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_China; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "chart_1":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_Asia; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "text_6":  {
                                   "parameters":  "@{fontSize=20; text=; textAlignment=center; textColor=#091A3E}",
                                   "type":  "text"
                               },
                    "text_9":  {
                                   "parameters":  "@{fontSize=14; text=# of Investment Clients Assisted\n(GPRA); textAlignment=left; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "chart_4":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_MEA; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "text_8":  {
                                   "parameters":  "@{fontSize=16; text=Asia; textAlignment=center; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "chart_3":  {
                                    "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Export_Europe; applyConditionalFormatting=True}",
                                    "type":  "chart"
                                },
                    "text_1":  {
                                   "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "text_87":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_86":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_89":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_88":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_83":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_82":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_85":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_84":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_81":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_80":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_79":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_76":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_75":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_78":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_77":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_72":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_180":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_8_3; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "text_71":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_74":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_73":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_184":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_5_4; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_183":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_4_4; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_182":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_3_4; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_181":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_13; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_188":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_14; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_187":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_8_4; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_186":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_4; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_185":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_6_4; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_189":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_3_5; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "text_60":  {
                                    "parameters":  "@{fontSize=11; text=(NT); textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_177":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_5_3; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_176":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_4_3; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_175":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_3_3; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_174":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_12; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_179":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_3; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_178":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_6_3; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_12":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Investment_MEA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Investment_MEA.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_11":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_MEA; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_118":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_InvestmentPromotion_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_InvestmentPromotion_GmAll.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_10":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Investment_Europe.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Investment_Europe.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_116":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_InvestmentPromotion_SUSA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_InvestmentPromotion_SUSA.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_19":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_2; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_17":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_SUSA; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_15":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_US; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_14":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Investment_WH.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Investment_WH.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_13":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_WH; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_122":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_Barriers_MEA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Barriers_MEA.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_120":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_Barriers_Europe.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Barriers_Europe.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_124":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_Barriers_WH.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Barriers_WH.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_108":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_InvestmentPromotion_Europe.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_InvestmentPromotion_Europe.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_23":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_4; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_106":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_InvestmentPromotion_China.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_InvestmentPromotion_China.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_21":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_3; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_29":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_China; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_28":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_Asia; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_27":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_6; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_25":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_5; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_110":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_InvestmentPromotion_MEA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_InvestmentPromotion_MEA.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_114":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_8_1; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_112":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_InvestmentPromotion_WH.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_InvestmentPromotion_WH.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_138":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Survey_Objectives_US.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_US.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_141":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Survey_Objectives_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_GmAll.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_148":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Survey_Objectives_WH.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_WH.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_147":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Survey_Objectives_MEA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_MEA.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_146":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Survey_Objectives_Europe.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_Europe.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_145":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Survey_Objectives_China.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_China.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_128":  {
                                       "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Investment_MEA; applyConditionalFormatting=True}",
                                       "type":  "chart"
                                   },
                    "number_127":  {
                                       "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Investment_Europe; applyConditionalFormatting=True}",
                                       "type":  "chart"
                                   },
                    "number_132":  {
                                       "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Investment_SUSA; applyConditionalFormatting=True}",
                                       "type":  "chart"
                                   },
                    "number_131":  {
                                       "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Investment_WH; applyConditionalFormatting=True}",
                                       "type":  "chart"
                                   },
                    "number_130":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_Barriers_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Barriers_GmAll.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_137":  {
                                       "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Investment_GmAll; applyConditionalFormatting=True}",
                                       "type":  "chart"
                                   },
                    "number_136":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_Advocacy_Advocacy.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Advocacy_Advocacy.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_134":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_CommercialDiplomacy_Advocacy.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_CommercialDiplomacy_Advocacy.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_56":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_China.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_China.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_55":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_Europe.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_Europe.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_54":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_Europe; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_53":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_MEA; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_18":  {
                                    "parameters":  "@{fontSize=16; text=China; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_52":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_MEA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_MEA.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_51":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_WH.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_WH.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "text_17":  {
                                    "parameters":  "@{fontSize=13; text=    # Commercial Diplomacy WINs; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_50":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_WH; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_19":  {
                                    "parameters":  "@{fontSize=16; text=Europe; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_14":  {
                                    "parameters":  "@{fontSize=12; text=(1) Data and targets for the current fiscal year are shown as of date accessed. Prior years data and targets show totals for the complete fiscal year.\n(2) Targets for the current FY reflect the YTD conversion of the annual target. Text color indicates progress towards that goal:\n; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_13":  {
                                    "parameters":  "@{fontSize=14; text=% of Clients with Objectives Met\n(Fee-based services only) (GPRA); textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_16":  {
                                    "parameters":  "@{fontSize=12; text=Not tracked (NT); textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_15":  {
                                    "parameters":  "@{fontSize=20; text=; textAlignment=center; textColor=#091A3E}",
                                    "type":  "text"
                                },
                    "text_10":  {
                                    "parameters":  "@{fontSize=12; text=  Performance below 50% of the target; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_59":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_Asia.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_Asia.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_58":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_Asia; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_12":  {
                                    "parameters":  "@{fontSize=14; text=# of Export Clients Assisted\n(GPRA); textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_57":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_China; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_11":  {
                                    "parameters":  "@{fontSize=14; text=# of WINs; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "chart_46":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_InvestmentPromotion_GmAll; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_203":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_8; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_45":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_InvestmentPromotion_SUSA; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_202":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_7; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_44":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_InvestmentPromotion_WH; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_201":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_8_6; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_43":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_InvestmentPromotion_MEA; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_200":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_6; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_67":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_WH; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_66":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_8; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_64":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_CommercialDiplomacy_WH.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_CommercialDiplomacy_WH.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_62":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_CommercialDiplomacy_MEA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_CommercialDiplomacy_MEA.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_61":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_Advocacy.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_Advocacy.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_60":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_Advocacy; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_68":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_US; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_4":  {
                                     "parameters":  "@{fontSize=12; text={{cell(Assists_Investment_Asia.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Investment_Asia.result, 0, \"Color\").asString()}}}",
                                     "type":  "text"
                                 },
                    "number_3":  {
                                     "parameters":  "@{fontSize=12; text={{cell(Wins_Barriers_Asia.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Barriers_Asia.result, 0, \"Color\").asString()}}}",
                                     "type":  "text"
                                 },
                    "number_2":  {
                                     "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_Asia; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                     "type":  "number"
                                 },
                    "number_33":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_CommercialDiplomacy_Asia.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_CommercialDiplomacy_Asia.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_31":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_39":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Investment_SUSA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Investment_SUSA.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_9":  {
                                     "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_Europe; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                     "type":  "number"
                                 },
                    "number_38":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_SUSA; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_8":  {
                                     "parameters":  "@{fontSize=12; text={{cell(Assists_Investment_China.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Investment_China.result, 0, \"Color\").asString()}}}",
                                     "type":  "text"
                                 },
                    "number_7":  {
                                     "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_China; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                     "type":  "number"
                                 },
                    "number_36":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_CommercialDiplomacy_China.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_CommercialDiplomacy_China.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_6":  {
                                     "parameters":  "@{fontSize=12; text={{cell(Wins_Barriers_China.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Barriers_China.result, 0, \"Color\").asString()}}}",
                                     "type":  "text"
                                 },
                    "number_35":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Survey_Objectives_Asia.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_Asia.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_100":  {
                                       "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Investment_China; applyConditionalFormatting=True}",
                                       "type":  "chart"
                                   },
                    "number_104":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_InvestmentPromotion_Asia.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_InvestmentPromotion_Asia.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_102":  {
                                       "parameters":  "@{fontSize=12; text={{cell(Wins_ExportPromotion_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_ExportPromotion_GmAll.result, 0, \"Color\").asString()}}}",
                                       "type":  "text"
                                   },
                    "number_45":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_GmAll.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_44":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_GmAll; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_42":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_CommercialDiplomacy_Europe.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_CommercialDiplomacy_Europe.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_204":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_9; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_41":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Investment_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Investment_GmAll.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_40":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Investment_GmAll; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "link_3":  {
                                   "parameters":  "@{destinationLink=; destinationType=page; fontSize=13; includeState=False; text=Button title; textAlignment=center; textColor=#44A2F5}",
                                   "type":  "link"
                               },
                    "link_4":  {
                                   "parameters":  "@{destinationLink=; destinationType=page; fontSize=18; includeState=False; text=Targets; textAlignment=center; textColor=#FFFFFF}",
                                   "type":  "link"
                               },
                    "link_1":  {
                                   "parameters":  "@{destinationLink=; destinationType=page; fontSize=18; includeState=False; text=Targets; textAlignment=center; textColor=rgb(0, 0, 0)}",
                                   "type":  "link"
                               },
                    "link_2":  {
                                   "parameters":  "@{destinationLink=; destinationType=page; fontSize=18; includeState=False; text=Progress; textAlignment=center; textColor=#FFFFFF}",
                                   "type":  "link"
                               },
                    "number_49":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_US; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_48":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Assists_Export_US.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_US.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_47":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_MEA; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_46":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_Europe; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "link_6":  {
                                   "parameters":  "@{destinationLink=; destinationType=page; fontSize=18; includeState=False; text=Progress; textAlignment=center; textColor=rgb(0, 0, 0)}",
                                   "type":  "link"
                               },
                    "number_99":  {
                                      "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Assists_Investment_Asia; applyConditionalFormatting=True}",
                                      "type":  "chart"
                                  },
                    "number_98":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_ExportPromotion_US.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_ExportPromotion_US.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_96":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_ExportPromotion_WH.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_ExportPromotion_WH.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_94":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_ExportPromotion_MEA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_ExportPromotion_MEA.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "text_51":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_92":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_ExportPromotion_Europe.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_ExportPromotion_Europe.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "number_90":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_ExportPromotion_China.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_ExportPromotion_China.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "chart_20":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Barriers_Europe; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "filterpanel_1":  {
                                          "parameters":  "@{filterItemOptions=; itemsPerRow=6; title=}",
                                          "type":  "filterpanel"
                                      },
                    "number_191":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_5_5; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_190":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_4_5; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "text_41":  {
                                    "parameters":  "@{fontSize=16; text=N/A; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_40":  {
                                    "parameters":  "@{fontSize=16; text={{cell(Survey_Objectives_GmAll.result, 0, \"Actual_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_GmAll.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "number_195":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_15; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_194":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_8_5; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_19":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Barriers_China; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_193":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_5; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_18":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Barriers_Asia; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_192":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_6_5; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_17":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Survey_Objectives_GmAll; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_199":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_6_6; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_198":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_5_6; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "number_197":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_4_6; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_14":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Survey_Objectives_US; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_196":  {
                                       "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_3_6; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                       "type":  "number"
                                   },
                    "chart_13":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Survey_Objectives_WH; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_12":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Survey_Objectives_MEA; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_11":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Survey_Objectives_Europe; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_10":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Survey_Objectives_China; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_31":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Advocacy_Advocacy; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_78":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_5_1; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "chart_30":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_CommercialDiplomacy_GmAll; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_76":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_4_1; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_74":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_3_1; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_39":  {
                                    "parameters":  "@{fontSize=13; text=    # Trade Barriers Reduced,\n    Removed, Prevented (APG, GPRA); textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_72":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_9; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_36":  {
                                    "parameters":  "@{fontSize=13; text=    # Investment Promotion WINs; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_35":  {
                                    "parameters":  "@{fontSize=14; text=     Fiscal Year; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_38":  {
                                    "parameters":  "@{fontSize=16; text={{cell(Survey_Objectives_US.result, 0, \"Actual_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_US.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "text_37":  {
                                    "parameters":  "@{fontSize=16; text={{cell(Survey_Objectives_WH.result, 0, \"Actual_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_WH.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "text_32":  {
                                    "parameters":  "@{fontSize=13; text=    # Export Promotion WINs; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_31":  {
                                    "parameters":  "@{fontSize=16; text={{cell(Survey_Objectives_China.result, 0, \"Actual_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_China.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "text_34":  {
                                    "parameters":  "@{fontSize=16; text={{cell(Survey_Objectives_MEA.result, 0, \"Actual_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_MEA.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "text_33":  {
                                    "parameters":  "@{fontSize=16; text={{cell(Survey_Objectives_Europe.result, 0, \"Actual_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_Europe.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "text_30":  {
                                    "parameters":  "@{fontSize=16; text={{cell(Survey_Objectives_Asia.result, 0, \"Actual_Label\").asString()}}; textAlignment=center; textColor={{cell(Survey_Objectives_Asia.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "chart_29":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_CommercialDiplomacy_Advocacy; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_70":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_CommercialDiplomacy_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_CommercialDiplomacy_GmAll.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "chart_28":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_CommercialDiplomacy_WH; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_27":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_CommercialDiplomacy_MEA; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_26":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_CommercialDiplomacy_Europe; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_25":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_CommercialDiplomacy_China; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_24":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_CommercialDiplomacy_Asia; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_23":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Barriers_GmAll; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_22":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Barriers_WH; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_21":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Barriers_MEA; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_42":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_InvestmentPromotion_Europe; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_88":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_ExportPromotion_Asia.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_ExportPromotion_Asia.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "chart_41":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_InvestmentPromotion_China; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_40":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_InvestmentPromotion_Asia; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_86":  {
                                      "parameters":  "@{fontSize=12; text={{cell(Wins_Advocacy_GmAll.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Wins_Advocacy_GmAll.result, 0, \"Color\").asString()}}}",
                                      "type":  "text"
                                  },
                    "text_29":  {
                                    "parameters":  "@{fontSize=13; text=    # Advocacy WINs; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "number_84":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_GmAll; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_28":  {
                                    "parameters":  "@{fontSize=12; text={{cell(Assists_Export_SUSA.result, 0, \"Target_Label\").asString()}}; textAlignment=center; textColor={{cell(Assists_Export_SUSA.result, 0, \"Color\").asString()}}}",
                                    "type":  "text"
                                },
                    "number_83":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=Total_Assists; numberColor=#FFFFFF; numberSize=18; step=Assists_Export_Advocacy; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "number_82":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_7_1; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "text_25":  {
                                    "parameters":  "@{fontSize=16; text=GM All; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_24":  {
                                    "parameters":  "@{fontSize=16; text=SUSA; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_27":  {
                                    "parameters":  "@{fontSize=12; text=(3) The Government Performance and Results Act (GPRA) requires that ITA report selected metrics (at the organizational-level) on Performance.gov.\n(4) ITA’s Agency Priority Goal. Trade Barriers Reduced, Removed, Prevented is an ITA-wide Metrics and includes contributions from E\u0026C and I\u0026A.; textAlignment=left; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_26":  {
                                    "parameters":  "@{fontSize=20; text=; textAlignment=center; textColor=#091A3E}",
                                    "type":  "text"
                                },
                    "text_21":  {
                                    "parameters":  "@{fontSize=16; text=WH; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_20":  {
                                    "parameters":  "@{fontSize=16; text=MEA; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_23":  {
                                    "parameters":  "@{fontSize=16; text=Advocacy; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "text_22":  {
                                    "parameters":  "@{fontSize=16; text=U.S.; textAlignment=center; textColor=#FFFFFF}",
                                    "type":  "text"
                                },
                    "chart_39":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_ExportPromotion_GmAll; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_38":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_ExportPromotion_US; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "number_80":  {
                                      "parameters":  "@{compact=False; exploreLink=True; measureField=count; numberColor=#FFFFFF; numberSize=18; step=all_6_1; textAlignment=center; title=; titleColor=#335779; titleSize=16}",
                                      "type":  "number"
                                  },
                    "listselector_1":  {
                                           "parameters":  "@{compact=False; displayTemplate=[Fiscal_Year]; exploreLink=False; instant=True; measureField=none; step=Fiscal_Year_1; title=}",
                                           "type":  "listselector"
                                       },
                    "chart_37":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_ExportPromotion_WH; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_36":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_ExportPromotion_MEA; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_35":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_ExportPromotion_Europe; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_34":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_ExportPromotion_China; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_33":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_ExportPromotion_Asia; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 },
                    "chart_32":  {
                                     "parameters":  "@{max=100; legend=; tooltip=; visualizationType=flatgauge; medium=33; exploreLink=True; title=; trellis=; colors=; high=66; columnMap=; min=0; computeTotal=False; valueType=percent; theme=dark; step=Wins_Advocacy_GmAll; applyConditionalFormatting=True}",
                                     "type":  "chart"
                                 }
                }
}
