{
    "dataSourceLinks":  [

                        ],
    "filters":  [

                ],
    "gridLayouts":  [
                        {
                            "name":  "Default",
                            "numColumns":  18,
                            "pages":  "",
                            "rowHeight":  "fine",
                            "selectors":  "",
                            "style":  "@{alignmentX=left; alignmentY=top; backgroundColor=rgb(234, 238, 244); cellSpacingX=16; cellSpacingY=0; fit=original; gutterColor=#C5D3E0}",
                            "version":  1.0
                        },
                        {
                            "name":  "Mobile",
                            "numColumns":  4,
                            "pages":  "",
                            "rowHeight":  "fine",
                            "selectors":  "maxWidth(599)",
                            "style":  "@{alignmentX=left; alignmentY=top; backgroundColor=#F2F6FA; cellSpacingX=8; cellSpacingY=0; fit=original; gutterColor=#C5D3E0}",
                            "version":  1.0
                        }
                    ],
    "layouts":  [

                ],
    "steps":  {
                  "MaxAPT":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "MaxAPT",
                                 "query":  "@{query={\"measures\":[[\"max\",\"RUN_TIME\"]],\"pigql\":\"a = load \\\"ApexExecutionWithUsers\\\"; a = group a by all; a = foreach a generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;b = load \\\"APIWithUsers\\\"; b = group b by all; b = foreach b generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;d = load \\\"DashboardWithUsers\\\"; d = group d by all; d = foreach d generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;e = load \\\"LoginWithUsers\\\";e = group e by all; e = foreach e generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;g = load \\\"ReportWithUsers\\\"; g = group g by all; g = foreach g generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;i = load \\\"RestApiWithUsers\\\"; i = group i by all; i = foreach i generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;k = load \\\"URIWithUsers\\\"; k = group k by all; k = foreach k generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;l = load \\\"VisualforceRequestWithUsers\\\"; l = group l by all; l = foreach l generate (max(\u0027RUN_TIME\u0027)*0.001) as \u0027max\u0027;m = union a,b,d,e,g,i,k,l;m = group m by all;m = foreach m generate max(\u0027max\u0027) as \u0027max_RUN_TIME\u0027;\"}; version=-1.0}",
                                 "receiveFacet":  false,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{options=; visualizationType=hbar}"
                             },
                  "DailySpeed":  {
                                     "broadcastFacet":  true,
                                     "datasets":  "",
                                     "isGlobal":  false,
                                     "label":  "DailySpeed",
                                     "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"pigql\":\"a = load \\\"ApexExecutionWithUsers\\\";a = group a by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);a = foreach a generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027,  \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;b = load \\\"APIWithUsers\\\";b = group b by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);b = foreach b generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;d = load \\\"DashboardWithUsers\\\";d = group d by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);d = foreach d generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;e = load \\\"LoginWithUsers\\\";e = group e by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);e = foreach e generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;g= load \\\"ReportWithUsers\\\";g = group g by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);g= foreach g generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;i = load \\\"RestApiWithUsers\\\";i = group i by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);i = foreach i generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;k = load \\\"URIWithUsers\\\";k = group k by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);k = foreach k generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027,count() as \u0027count\u0027;l = load \\\"VisualforceRequestWithUsers\\\";l = group l by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);l = foreach l generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, avg(\u0027RUN_TIME\u0027) as \u0027avg_RUN_TIME\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027,count() as \u0027count\u0027;m = union a,b,d,e,g,i,k,l;\",\"values\":[],\"groups\":[[\"TIMESTAMP_DERIVED_Year\",\"TIMESTAMP_DERIVED_Month\",\"TIMESTAMP_DERIVED_Day\"],\"EVENT_TYPE\"],\"dimensions\":[\"TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\"],\"order\":[]}; version=-1.0}",
                                     "receiveFacet":  false,
                                     "selectMode":  "single",
                                     "type":  "aggregateflex",
                                     "useGlobal":  true,
                                     "visualizationParameters":  "@{options=; visualizationType=time}"
                                 },
                  "TotalCount":  {
                                     "broadcastFacet":  true,
                                     "datasets":  "",
                                     "isGlobal":  false,
                                     "label":  "TotalCount",
                                     "query":  "@{query={\"measures\":[[\"sum\",\"Total\"]],\"pigql\":\"a = load \\\"ApexExecutionWithUsers\\\"; a = group a by all; a = foreach a generate count() as \u0027count\u0027;b = load \\\"APIWithUsers\\\"; b = group b by all; b = foreach b generate count() as \u0027count\u0027;c = load \\\"ContentTransferWithUsers\\\"; c = group c by all; c = foreach c generate count() as \u0027count\u0027;d = load \\\"DashboardWithUsers\\\"; d = group d by all; d = foreach d generate count() as \u0027count\u0027;e = load \\\"LoginWithUsers\\\";e = group e by all; e = foreach e generate count() as \u0027count\u0027;f = load \\\"LoginAsWithUsers\\\"; f = group f by all; f = foreach f generate count() as \u0027count\u0027;g = load \\\"ReportWithUsers\\\"; g = group g by all; g = foreach g generate count() as \u0027count\u0027;h = load \\\"ReportExportWithUsers\\\"; h = group h by all; h = foreach h generate count() as \u0027count\u0027;i = load \\\"RestApiWithUsers\\\"; i = group i by all; i = foreach i generate count() as \u0027count\u0027;j = load \\\"LightningPageViewWithUsers\\\"; j = group j by all; j = foreach j generate count() as \u0027count\u0027;k = load \\\"URIWithUsers\\\"; k = group k by all; k = foreach k generate count() as \u0027count\u0027;l = load \\\"VisualforceRequestWithUsers\\\"; l = group l by all; l = foreach l generate count() as \u0027count\u0027;m = union a,b,c,d,e,f,g,h,i,j,k,l;m = group m by all;m = foreach m generate sum(\u0027count\u0027) as \u0027sum_Total\u0027;\"}; version=-1.0}",
                                     "receiveFacet":  false,
                                     "selectMode":  "single",
                                     "type":  "aggregateflex",
                                     "useGlobal":  true,
                                     "visualizationParameters":  "@{options=; visualizationType=hbar}"
                                 },
                  "EventTypeSelector":  {
                                            "broadcastFacet":  false,
                                            "isGlobal":  false,
                                            "label":  "EventTypeSelector",
                                            "selectMode":  "single",
                                            "type":  "staticflex",
                                            "useGlobal":  false,
                                            "values":  ""
                                        },
                  "MaxEPT":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "MaxEPT",
                                 "query":  "@{query={\"measures\":[[\"max\",\"EFFECTIVE_PAGE_TIME\"]],\"pigql\":\"a = load \\\"LightningPageViewWithUsers\\\"; a = group a by all; a = foreach a generate (max(\u0027EFFECTIVE_PAGE_TIME\u0027)*0.001) as \u0027max\u0027;b = group a by all;b = foreach b generate max(\u0027max\u0027) as \u0027max_EFFECTIVE_PAGE_TIME\u0027;\"}; version=-1.0}",
                                 "receiveFacet":  false,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{options=; visualizationType=hbar}"
                             },
                  "CountUsers":  {
                                     "broadcastFacet":  true,
                                     "datasets":  "",
                                     "isGlobal":  false,
                                     "label":  "CountUsers",
                                     "query":  "@{query={\"measures\":[[\"count\",\"USER_ID\"]]}; version=-1.0}",
                                     "receiveFacet":  true,
                                     "selectMode":  "single",
                                     "type":  "aggregateflex",
                                     "useGlobal":  true,
                                     "visualizationParameters":  "@{options=; visualizationType=hbar}"
                                 },
                  "AvgAPT":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "AvgAPT",
                                 "query":  "@{query={\"measures\":[[\"avg\",\"RUN_TIME\"]],\"pigql\":\"a = load \\\"ApexExecutionWithUsers\\\"; a = group a by all; a = foreach a generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;b = load \\\"APIWithUsers\\\"; b = group b by all; b = foreach b generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;d = load \\\"DashboardWithUsers\\\"; d = group d by all; d = foreach d generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;e = load \\\"LoginWithUsers\\\";e = group e by all; e = foreach e generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;g = load \\\"ReportWithUsers\\\"; g = group g by all; g = foreach g generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;i = load \\\"RestApiWithUsers\\\"; i = group i by all; i = foreach i generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;k = load \\\"URIWithUsers\\\"; k = group k by all; k = foreach k generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;l = load \\\"VisualforceRequestWithUsers\\\"; l = group l by all; l = foreach l generate (avg(\u0027RUN_TIME\u0027)*0.001) as \u0027avg\u0027;m = union a,b,d,e,g,i,k,l;m = group m by all;m = foreach m generate avg(\u0027avg\u0027) as \u0027avg_RUN_TIME\u0027;\"}; version=-1.0}",
                                 "receiveFacet":  false,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{options=; visualizationType=hbar}"
                             },
                  "DailyCount":  {
                                     "broadcastFacet":  true,
                                     "datasets":  "",
                                     "isGlobal":  false,
                                     "label":  "DailyCount",
                                     "query":  "@{query={\"measures\":[[\"count\",\"*\"]],\"pigql\":\"a = load \\\"ApexExecutionWithUsers\\\";a = group a by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);a = foreach a generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;b = load \\\"APIWithUsers\\\";b = group b by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);b = foreach b generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;c = load \\\"ContentTransferWithUsers\\\";c = group c by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);c = foreach c generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;d = load \\\"DashboardWithUsers\\\";d = group d by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);d = foreach d generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;e = load \\\"LoginWithUsers\\\";e = group e by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);e = foreach e generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;f = load \\\"LoginAsWithUsers\\\";f = group f by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);f = foreach f generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;g= load \\\"ReportWithUsers\\\";g = group g by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);g= foreach g generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;h = load \\\"ReportExportWithUsers\\\";h = group h by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);h = foreach h generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;i = load \\\"RestApiWithUsers\\\";i = group i by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);i = foreach i generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;j = load \\\"LightningPageViewWithUsers\\\";j = group j by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);j = foreach j generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;k = load \\\"URIWithUsers\\\";k = group k by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);k = foreach k generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;l = load \\\"VisualforceRequestWithUsers\\\";l = group l by (\u0027TIMESTAMP_DERIVED_Year\u0027, \u0027TIMESTAMP_DERIVED_Month\u0027, \u0027TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027);l = foreach l generate \u0027TIMESTAMP_DERIVED_Year\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Month\u0027 + \\\"~~~\\\" + \u0027TIMESTAMP_DERIVED_Day\u0027 as \u0027TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\u0027, \u0027EVENT_TYPE\u0027 as \u0027EVENT_TYPE\u0027, count() as \u0027count\u0027;m = union a,b,c,d,e,f,g,h,i,j,k,l;\",\"values\":[],\"groups\":[[\"TIMESTAMP_DERIVED_Year\",\"TIMESTAMP_DERIVED_Month\",\"TIMESTAMP_DERIVED_Day\"],\"EVENT_TYPE\"],\"dimensions\":[\"TIMESTAMP_DERIVED_Year~~~TIMESTAMP_DERIVED_Month~~~TIMESTAMP_DERIVED_Day\"],\"order\":[]}; version=-1.0}",
                                     "receiveFacet":  false,
                                     "selectMode":  "single",
                                     "type":  "aggregateflex",
                                     "useGlobal":  true,
                                     "visualizationParameters":  "@{options=; visualizationType=time}"
                                 },
                  "AvgEPT":  {
                                 "broadcastFacet":  true,
                                 "datasets":  "",
                                 "isGlobal":  false,
                                 "label":  "AvgEPT",
                                 "query":  "@{query={\"measures\":[[\"avg\",\"EFFECTIVE_PAGE_TIME\"]],\"pigql\":\"a = load \\\"LightningPageViewWithUsers\\\"; a = group a by all; a = foreach a generate (avg(\u0027EFFECTIVE_PAGE_TIME\u0027)*0.001) as \u0027avg\u0027;b = group a by all;b = foreach b generate avg(\u0027avg\u0027) as \u0027avg_EFFECTIVE_PAGE_TIME\u0027;\"}; version=-1.0}",
                                 "receiveFacet":  false,
                                 "selectMode":  "single",
                                 "type":  "aggregateflex",
                                 "useGlobal":  true,
                                 "visualizationParameters":  "@{options=; visualizationType=hbar}"
                             }
              },
    "widgetStyle":  {
                        "backgroundColor":  "#FFFFFF",
                        "borderColor":  "#E6ECF2",
                        "borderEdges":  [

                                        ],
                        "borderRadius":  0,
                        "borderWidth":  1
                    },
    "widgets":  {
                    "text_1":  {
                                   "parameters":  "@{fontSize=48; showActionMenu=True; text=My Trust; textAlignment=center; textColor=#091A3E}",
                                   "type":  "text"
                               },
                    "number_6":  {
                                     "parameters":  "@{compact=True; exploreLink=True; measureField=unique_USER_ID; numberColor=#FFFFFF; numberSize=32; showActionMenu=True; step=CountUsers; textAlignment=left; title=Active Users; titleColor=#FFFFFF; titleSize=12}",
                                     "type":  "number"
                                 },
                    "number_5":  {
                                     "parameters":  "@{compact=True; exploreLink=True; measureField=max_DELTA; numberColor=#FFFFFF; numberSize=32; showActionMenu=True; step=MaxEPT; textAlignment=left; title=Max EPT; titleColor=#FFFFFF; titleSize=12}",
                                     "type":  "number"
                                 },
                    "number_4":  {
                                     "parameters":  "@{compact=True; exploreLink=True; measureField=avg_DELTA; numberColor=#FFFFFF; numberSize=32; showActionMenu=True; step=AvgEPT; textAlignment=left; title=Avg EPT; titleColor=#FFFFFF; titleSize=12}",
                                     "type":  "number"
                                 },
                    "number_3":  {
                                     "parameters":  "@{compact=True; exploreLink=True; measureField=max_RUN_TIME; numberColor=#FFFFFF; numberSize=32; showActionMenu=True; step=MaxAPT; textAlignment=left; title=Max APT; titleColor=#FFFFFF; titleSize=12}",
                                     "type":  "number"
                                 },
                    "number_2":  {
                                     "parameters":  "@{compact=True; exploreLink=True; measureField=avg_RUN_TIME; numberColor=#FFFFFF; numberSize=32; showActionMenu=True; step=AvgAPT; textAlignment=left; title=Avg APT; titleColor=#FFFFFF; titleSize=12}",
                                     "type":  "number"
                                 },
                    "container_1":  {
                                        "parameters":  "@{alignmentX=left; alignmentY=top; fit=original}",
                                        "type":  "container"
                                    },
                    "number_1":  {
                                     "parameters":  "@{compact=True; exploreLink=True; measureField=sum_Total; numberColor=#FFFFFF; numberSize=32; showActionMenu=True; step=TotalCount; textAlignment=left; title=Total Transactions; titleColor=#FFFFFF; titleSize=12}",
                                     "type":  "number"
                                 },
                    "container_3":  {
                                        "parameters":  "@{alignmentX=left; alignmentY=top; fit=original}",
                                        "type":  "container"
                                    },
                    "container_4":  {
                                        "parameters":  "@{alignmentX=left; alignmentY=top; fit=original}",
                                        "type":  "container"
                                    },
                    "text_3":  {
                                   "parameters":  "@{fontSize=20; showActionMenu=True; text=Daily Transaction Count; textAlignment=left; textColor=#091A3E}",
                                   "type":  "text"
                               },
                    "text_2":  {
                                   "parameters":  "@{fontSize=16; showActionMenu=True; text=A single place to quickly view the health of your org.; textAlignment=left; textColor=#FFFFFF}",
                                   "type":  "text"
                               },
                    "container_7":  {
                                        "parameters":  "@{alignmentX=left; alignmentY=top; fit=original}",
                                        "type":  "container"
                                    },
                    "listselector_1":  {
                                           "parameters":  "@{compact=True; exploreLink=False; instant=True; showActionMenu=False; step=EventTypeSelector; title=Type}",
                                           "type":  "listselector"
                                       },
                    "chart_2":  {
                                    "parameters":  "@{totalValue=computeTotal; showPoints=True; legend=; axisMode=multi; visualizationType=time; missingValue=connect; timeAxis=; exploreLink=False; title=; trellis=; totalLabel=; fillArea=True; showActionMenu=True; showZero=True; measureAxis2=; measureAxis1=; theme=wave; step=DailySpeed}",
                                    "type":  "chart"
                                },
                    "text_6":  {
                                   "parameters":  "@{fontSize=20; showActionMenu=True; text=Daily Transaction Speed (APT); textAlignment=left; textColor=#091A3E}",
                                   "type":  "text"
                               },
                    "chart_1":  {
                                    "parameters":  "@{totalValue=computeTotal; showPoints=True; legend=; axisMode=multi; visualizationType=time; missingValue=connect; timeAxis=; exploreLink=True; title=; trellis=; totalLabel=; fillArea=True; showActionMenu=True; showZero=True; measureAxis2=; measureAxis1=; theme=wave; step=DailyCount}",
                                    "type":  "chart"
                                }
                }
}
