<apex:page showheader="false" standardStylesheets="false" applyBodyTag="false" applyHtmlTag="false" controller="Group_Controller">
<apex:composition template="Site_Template">
    <apex:define name="sectionalNav">
        <apex:outputPanel >
          <div class="subheader">
            <div class="containerITA">
               <div class="row">
               
                   <nav id="subnav">  
                   <h4 id="sectionName">Communities</h4>
                       <a href="/apex/community"> MY COMMUNITY </a>
                       <a href="/apex/group"> GROUPS </a>
                       <a href="#"> PEOPLE </a>
                       <a href="#"> TOPICS </a>
                       <a href="#"> FILES </a>
                   </nav>
                </div>
              </div>
            </div>  
        </apex:outputPanel>
    </apex:define>
    <apex:define name="page">
<script type="text/javascript">
tinymce.init({
        selector : "#FeedItemBody",
        toolbar1: "bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist | outdent indent | undo redo | link",

        menubar: false,
        plugins: [
            "advlist autolink autosave link image lists charmap hr anchor pagebreak spellchecker",
            "searchreplace wordcount visualblocks visualchars code media nonbreaking",
            "table contextmenu directionality emoticons template textcolor paste textcolor colorpicker textpattern"
        ],
        style_formats: [
            {title: 'Table styles'},
            {title: 'Table row 1', selector: 'tr', classes: 'tablerow1'}
        ]
});</script>

    <style>
textarea {width: 100%;}    
 

#replyWrapper {display: none;}
    </style>
<script language="javascript">
  Visualforce.remoting.timeout = 120000;

  function saveFeed(){
   Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.Group_Controller.SaveFeed}',
        {ParentId: '{!GroupId}', Id: null, Body: tinyMCE.get('FeedItemBody').getContent(), IsRichText: true},
        handleSaveFeed
    );
  }
  
  function saveReply(id){
      Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.Group_Controller.saveReply}',
          {FeedItemId: commentId, CommentBody: $('#replyBody').val(), CommentType: 'TextComment'},
          handleSaveReply
      );
  }
  
  function getFeeds(){
      Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.Group_Controller.GetFeeds}',
          '{!GroupId}',
          handleGetFeeds
      );
  }

  function join(){
      Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.Group_Controller.join}',
          '{!ChatterGroup.Id}',
          handleJoin
      );
  }

  function handleJoin(result, event){
      console.log(result);
      $('#joinButton').hide();
      $('#leaveButton').show();
  }

  function leave(){
      Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.Group_Controller.leave}',
          '{!ChatterGroup.Id}',
          handleLeave
      );  
  }

  function handleLeave(result, event){
      console.log(result);
      $('#joinButton').show();
      $('#leaveButton').hide();
  }

  function like(id){
      var FeedEntityId = id;
      Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.Group_Controller.addLike}',
          FeedEntityId+'',
          handleLike
      );
  }

  function handleLike(result, event){
      getFeeds();
  }
  
  function handleSaveFeed(result, event){
      getFeeds();
  }

  function handleGetFeeds(result, event){
      console.log(result);
        $('#replyDock').parent().append($('#replyWrapper'));
        $('#replyBody').val('');
        $('#FeedItemBody').val('');
        tinyMCE.activeEditor.setContent('');
        $('#FeedsWrapper').empty();
        for(i = 0; i < result.length;i++){
            var e = document.createElement('div');
                e.className = 'comment';
            var icon = document.createElement('i');
                icon.title = 'Leave a Reply';
                icon.className = 'fa fa-comment';
                icon.style.marginLeft = '10px';
                icon.id = result[i].Id;
                icon.onclick = (function(){
                    openReply(this.id);
                });
                var iconText = document.createElement('em');
                    iconText.innerHTML = 'Comment';
                    iconText.dataset.thread = result[i].Id;
                    iconText.style.marginLeft = '6px';
                    iconText.onclick = (function(){openReply(this.dataset.thread)});
                var detail = document.createElement('div');
                    detail.id = 'grpUser';
                    var createdBy = document.createElement('a');
                    createdBy.dataset.role="authorName";
                    createdBy.href = '#'+result[i].CreatedById;
                    createdBy.innerHTML = result[i].CreatedBy.FirstName+' '+result[i].CreatedBy.LastName;
                    var creatorCompany = document.createElement('span');
                        creatorCompany.innerHTML = ' ('+companies[result[i].CreatedById]+')';
                $(detail).append(createdBy);
                $(detail).append(creatorCompany);
                    $(e).append(detail);                
                
                var thumbs = document.createElement('i');
                    thumbs.className = "fa fa-thumbs-up grpThumb";
                    thumbs.title = 'Like';
                    thumbs.dataset.responseId = result[i].Id;
                    thumbs.onclick = (function(){
                        like(this.dataset.responseId);
                    });
                var thumbsText = document.createElement('em');
                    thumbsText.innerHTML = 'Like';
                    thumbsText.dataset.thread = result[i].Id;
                    thumbsText.onclick = (function(){like(this.dataset.thread)});
                var thumbCount = document.createElement('span');
                    thumbCount.innerHTML = '('+result[i].LikeCount+')';
                    thumbCount.style.marginRight = '3px';
                    thumbCount.style.marginLeft = '3px';
                    
                var d = document.createElement('em');
                    d.innerHTML = ' - '+parseTime(result[i].CreatedDate);
                    d.style.marginLeft = '10px';
                    
                var footer = document.createElement('div');
                    $(footer).append(thumbsText);
                    $(footer).append(thumbs);               
                    $(footer).append(thumbCount);
                    $(footer).append(icon);
                    $(footer).append(iconText);
                    $(footer).append(d);

                    
            if(result[i].Body != undefined){
                if(result[i].IsRichText == true){
                    var body = document.createElement('div');
                    body.innerHTML = result[i].Body;
                    body.innerHTML = $(body).html(body.innerHTML).text();
                    $(e).append(body);
                }else{
                    var p = document.createElement('p');
                    p.innerHTML = result[i].Body;
                    p.style.marginBottom = '0px';
                    $(e).append(p);
                }
                var dock = document.createElement('div');
                    dock.id = result[i].Id+'_dock';
                    $(e).append(dock);
                    $(e).append(footer);
                if(result[i].FeedComments != undefined){
                    for(rep = 0; rep < result[i].FeedComments.length; rep++){
                    var replyDetail = document.createElement('div');
                        replyDetail.id = 'grpReplyUser';
                        var replyCreatedBy = document.createElement('a');
                        replyCreatedBy.href = '#';
                        replyCreatedBy.innerHTML = result[i].FeedComments[rep].CreatedBy.FirstName+' '+result[i].FeedComments[rep].CreatedBy.LastName;
                        var replyCreatorCompany = document.createElement('span');
                            replyCreatorCompany.innerHTML = ' ('+companies[result[i].FeedComments[rep].CreatedById]+')';

                        var replyCreatedDate = document.createElement('em');
                            replyCreatedDate.innerHTML = ' - '+parseTime(result[i].FeedComments[rep].CreatedDate);                        
                    $(replyDetail).append(replyCreatedBy);
                    $(replyDetail).append(replyCreatorCompany);
                    $(replyDetail).append(replyCreatedDate);
                        var reply = document.createElement('div');
                            reply.className = 'reply';
                        reply.innerHTML = result[i].FeedComments[rep].CommentBody;
                        $(reply).prepend(replyDetail);
                        $(e).append(reply);
                    }
                }
                $('#FeedsWrapper').append(e);
            }
        }
  }
  
  function handleSaveReply(result, event){
      getFeeds();
      $('#replyWrapper').hide();
  }
  
    function openReply(id){
        commentId = id;
        $('#'+id+'_dock').append($('#replyWrapper'));
        $('#replyWrapper').show();
    }
    
    var commentId;

    function parseTime(t){
        var output = '';
        var d = new Date(t);
        output = (d.getMonth() + 1)+"/"+d.getDate()+'/'+d.getFullYear();
        var hours = d.getHours();
        var part = 'AM';
        if(hours > 12){
            hours = hours-12;
            part = 'PM';
        }
        var minutes = d.getMinutes(); 
        minutes = minutes > 9 ? minutes : '0' + minutes;
        output += ' '+hours+':'+minutes+' '+part;                           
        return output;
    }

//userId to Company map
var companies = {};
<apex:repeat value="{!users}" var="user">
    companies['{!user.id}'] = '{!user.companyname}';
</apex:repeat>
</script>
     <div class="containerITA itaBr">     
        <apex:outputText id="ChatterGroupListWrapper" rendered="{!!hasId}">
        <div id="ChatterGroupList" class="col-md-12">
          <h2>Groups</h2>
          
            <apex:repeat value="{!groups}" var="group">
              <div style="width: 97%; margin: 1%; border: 1px solid #eee; border-radius: 3px; padding: 20px 25px 20px 25px;">
              
             <table width="100%" border="0px" >
              <tr>
               <td width="10%" valign="Top">   
                       <img src="{!group.SmallPhotoUrl}" width="75%" height="75%"/>
                 </td>
                  <td width="55%" valign="Top">
                     <h5><a href="?id={!group.id}">{!group.name}</a></h5><br/>
                     {!group.description}<br/><br/>
                    <h6>{!group.membercount} Members </h6>
                  </td>
                 
                   <td width="15%" align="center" valign="middle">Last Activity<br/>
                   <apex:outputText value="{0, date, h:mm a}"><apex:param value="{!group.LastFeedModifiedDate}"/></apex:outputText>
                   </td>
                   <td width="20%" align="center" valign="middle">
                    <input id="joinButton" type="button" value="Follow" style="display: {!if(!isMember, 'block', 'none')};" class="itaAltBtn itaCntr" onclick="join();" />
                <input id="leaveButton" type="button" value="Unfollow" style="display: {!if(isMember, 'block', 'none')};" class="itaAltBtn itaCntr" onclick="leave();" />
                </td>
             </tr>
               </table>   
                </div>
            </apex:repeat>
        </div>
        <div id="PersonalFeed" class="col-md-9"></div>
        </apex:outputText>
        <apex:outputText id="ChatterGroupWrapper" rendered="{!hasId}">
            <div class="col-md-12" style="padding-top: 0px; padding-bottom: 0px;">
                <h2>{!ChatterGroup.name}</h2>
            </div>
            <div class="col-md-3">
                <img src="{!ChatterGroup.fullPhotoURL}" width="90%" />
                <p class="grpDescrip">{!ChatterGroup.description}</p>
            </div>
            <div class="col-md-6">
                <textarea id="FeedItemBody" placeholder="Share with {!ChatterGroup.name}" /><br />
                <input type="button" id="publishersharebutton" class="egDefaultBtn itaGroupBtn" value="Share" onclick="saveFeed();" />
                <div id="FeedsWrapper"></div>
            </div>
             <div class="col-md-3">
             <input id="joinButton" type="button" value="Follow" style="display: {!if(!isMember, 'block', 'none')};" class="itaAltBtn itaCntr" onclick="join();" />
                <input id="leaveButton" type="button" value="Following" style="display: {!if(isMember, 'block', 'none')};" class="itaAltBtn itaCntr" onclick="leave();" />
             </div>
        </apex:outputText>
        <div id="replyDock">
            <div id="replyWrapper">  
                <textarea id="replyBody" placeholder="Leave a Reply" /><br />
                <input type="button" value="Reply" onclick="saveReply();" id="replyButton" />
            </div>
        </div>
        <script language="javascript">
            getFeeds();
        </script> 
      </div>
    </apex:define>
</apex:composition>
</apex:page>